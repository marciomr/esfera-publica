---
http_interactions:
- request:
    method: get
    uri: https://www.propublica.org/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Feedjira 2.1.2
  response:
    status:
      code: 200
      message: 
    headers:
      server:
      - nginx/1.7.10
      content-type:
      - text/html; charset=utf-8
      x-powered-by:
      - PHP/5.3.29
      access-control-allow-origin:
      - http://www.propublica.org, https://www.propublica.org, http://projects.propublica.org,
        https://projects.propublica.org, http://static.propublica.org, https://static.propublica.org
      content-language:
      - en
      via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      x-pp-age:
      - '2728'
      x-from-nginx:
      - 'true'
      content-security-policy:
      - upgrade-insecure-requests
      fastly-debug-digest:
      - 5d02c0646ee03b084fafc5c1a5d7921245211a8413a1e4fcaba9f7a781daff7c
      content-length:
      - '16423'
      accept-ranges:
      - bytes
      date:
      - Tue, 04 Apr 2017 13:11:49 GMT
      age:
      - '1026'
      connection:
      - close
      x-served-by:
      - cache-dfw1837-DFW, cache-gru7124-GRU
      x-cache:
      - PPHIT, HIT, HIT
      x-cache-hits:
      - 4, 1
      x-timer:
      - S1491311509.828218,VS0,VE0
      vary:
      - Accept-Encoding
      cache-control:
      - max-age=30, public, must-revalidate
      strict-transport-security:
      - max-age=10886400; includeSubDomains; preload
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        CiAKCjwhRE9DVFlQRSBodG1sPgo8aHRtbCBsYW5nPSJlbiIgeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BcnRpY2xlIj4KICAgIDxoZWFkIHByZWZpeD0ib2c6IGh0dHA6Ly9vZ3AubWUvbnMjIGZiOiBodHRwOi8vb2dwLm1lL25zL2ZiIyBhcnRpY2xlOiBodHRwOi8vb2dwLm1lL25zL2FydGljbGUjIj4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4KCiAgICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvIj4KICAgICAgICA8bWV0YSBuYW1lPSJzY29wZSIgY29udGVudD0iIj4KICAgIDxtZXRhIG5hbWU9InByb2plY3QiIGNvbnRlbnQ9IiI+CiAgICA8bWV0YSBuYW1lPSJ0eXBlIiBjb250ZW50PSJob21lcGFnZSI+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iUHJvUHVibGljYSBpcyBhbiBpbmRlcGVuZGVudCwgbm9uLXByb2ZpdCBuZXdzcm9vbSB0aGF0IHByb2R1Y2VzIGludmVzdGlnYXRpdmUgam91cm5hbGlzbSBpbiB0aGUgcHVibGljIGludGVyZXN0LiI+CgogICAgPG1ldGEgcHJvcGVydHk9ImZiOmFwcF9pZCIgY29udGVudD0iMjI5ODYyNjU3MTMwNTU3Ij4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IlByb1B1YmxpY2EiPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvIj4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICA8bWV0YSBwcm9wZXJ0eT0idHdpdHRlcjpzaXRlIiBjb250ZW50PSJAUHJvUHVibGljYSI+CiAgICAgICAgPG1ldGEgaXRlbXByb3A9Im5hbWUiIGNvbnRlbnQ9IiI+CiAgICA8bWV0YSBpdGVtcHJvcD0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IiI+CiAgICA8bWV0YSBpdGVtcHJvcD0iaW1hZ2UiIGNvbnRlbnQ9IiI+CgogICAgICAgIAogICAgICAgIDxzY3JpcHQ+CiAgKGZ1bmN0aW9uKGQpIHsKICAgIHZhciBjb25maWcgPSB7CiAgICAgIGtpdElkOiAnbnBvMnB6ZycsCiAgICAgIHNjcmlwdFRpbWVvdXQ6IDMwMDAsCiAgICAgIGFzeW5jOiB0cnVlCiAgICB9LAogICAgaD1kLmRvY3VtZW50RWxlbWVudCx0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtoLmNsYXNzTmFtZT1oLmNsYXNzTmFtZS5yZXBsYWNlKC9cYndmLWxvYWRpbmdcYi9nLCIiKSsiIHdmLWluYWN0aXZlIjt9LGNvbmZpZy5zY3JpcHRUaW1lb3V0KSx0az1kLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLGY9ZmFsc2Uscz1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXSxhO2guY2xhc3NOYW1lKz0iIHdmLWxvYWRpbmciO3RrLnNyYz0naHR0cHM6Ly91c2UudHlwZWtpdC5uZXQvJytjb25maWcua2l0SWQrJy5qcyc7dGsuYXN5bmM9dHJ1ZTt0ay5vbmxvYWQ9dGsub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7YT10aGlzLnJlYWR5U3RhdGU7aWYoZnx8YSYmYSE9ImNvbXBsZXRlIiYmYSE9ImxvYWRlZCIpcmV0dXJuO2Y9dHJ1ZTtjbGVhclRpbWVvdXQodCk7dHJ5e1R5cGVraXQubG9hZChjb25maWcpfWNhdGNoKGUpe319O3MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGsscykKICB9KShkb2N1bWVudCk7Cjwvc2NyaXB0PgogICAgCiAgICA8c2NyaXB0PnZhciBfc2Zfc3RhcnRwdD0obmV3IERhdGUoKSkuZ2V0VGltZSgpPC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvanMvcHVibGljL2Fzc2V0cy9hbGwuanM/MTQ5MTMwNzc1NCIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PgoKICAgIAogICAgICAgIAoKICAgIAogICAgICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvY3NzLzk2MC9yZXNldC5jc3M/MTQ5MTMwNzc1NCIgbWVkaWE9ImFsbCIgY2hhcnNldD0idXRmLTgiIC8+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9jc3MvOTYwL3Byb3B1YmxpY2EtdGV4dC5jc3M/MTQ5MTMwNzc1NCIgbWVkaWE9ImFsbCIgY2hhcnNldD0idXRmLTgiIC8+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9jc3MvbWFzdGVyLmNzcz8xNDkxMzA3NzU0IiBtZWRpYT0ic2NyZWVuIiBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvY3NzL21hcmdhcml0YS5jc3M/MTQ5MTMwNzc1NCIgbWVkaWE9ImFsbCIgY2hhcnNldD0idXRmLTgiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBhZGFwdGl2ZSAtLT4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIG1lZGlhPSJzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvY3NzL3dvbGFuZC5jc3M/MTQ5MTMwNzc1NCIgY2hhcnNldD0idXRmLTgiIC8+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBtZWRpYT0ic2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkgYW5kIChtaW4td2lkdGg6IDQ4MXB4KSIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvY3NzL2JlaGVtb3RoLmNzcz8xNDkxMzA3NzU0IiBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgICAgICA8IS0tIC9hZGFwdGl2ZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9jc3MvcHJpbnQtMjAxMS5jc3M/MTQ5MTMwNzc1NCIgbWVkaWE9InByaW50IiBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgICAgICAgICAgICAgIDwhLS1baWYgSUVdPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvY3NzL2llLmNzcz8xNDkxMzA3NzU0IiBtZWRpYT0ic2NyZWVuIiBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgICAgICA8IVtlbmRpZl0tLT4KICAgICAgICA8IS0tW2lmIElFIDddPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvY3NzL2llNy5jc3M/MTQ5MTMwNzc1NCIgbWVkaWE9InNjcmVlbiIgY2hhcnNldD0idXRmLTgiIC8+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9jc3MvaWU3LTIwMTEuY3NzPzE0OTEzMDc3NTQiIG1lZGlhPSJzY3JlZW4iIGNoYXJzZXQ9InV0Zi04IiAvPgogICAgICAgIDwhW2VuZGlmXS0tPgogICAgICAgIDwhLS1baWYgbHQgSUUgN10+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9jc3MvaWU2LmNzcz8xNDkxMzA3NzU0IiBtZWRpYT0ic2NyZWVuIiBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvanMvRERfYmVsYXRlZFBOR18wLjAuOGEtbWluLmpzPzE0OTEzMDc3NTQiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgY2hhcnNldD0idXRmLTgiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9qcy9wbmdmaXguanM/MTQ5MTMwNzc1NCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBjaGFyc2V0PSJ1dGYtOCI+PC9zY3JpcHQ+CiAgICAgICAgPCFbZW5kaWZdLS0+CiAgICAgICAgICAgICAgICAKICAgICAgICA8bWV0YSBuYW1lPSJnb29nbGUtc2l0ZS12ZXJpZmljYXRpb24iIGNvbnRlbnQ9IlI3eWwzZC1aLXFIVzZ4VEl0V2hCWWdnR1JPb1pOZ0VWaDJ6NmRWbmV1SU0iPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJmYjpwYWdlcyIgY29udGVudD0iMTMzMjA5Mzk0NDQiIC8+CgogICAgICAgICAgICAgICAgCiAgICAgICAgPHNjcmlwdCBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgICB2YXIgX3NmX2FzeW5jX2NvbmZpZyA9ICh3aW5kb3cuX3NmX2FzeW5jX2NvbmZpZyB8fCB7fSk7CiAgICAgICAgICBfc2ZfYXN5bmNfY29uZmlnLnNlY3Rpb25zID0gIiI7CiAgICAgICAgICBfc2ZfYXN5bmNfY29uZmlnLmF1dGhvcnMgPSAiIjsKICAgICAgICAgIF9zZl9hc3luY19jb25maWcudXNlQ2Fub25pY2FsID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgCgogICAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIHRpdGxlPSJUb3AgU3RvcmllcyBSU1MgRmVlZCIgaHJlZj0iaHR0cDovL2ZlZWRzLnByb3B1YmxpY2Eub3JnL3Byb3B1YmxpY2EvbWFpbiIgLz4KICAgIAogICAgCiAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIGhyZWY9Ii9hcHBsZS10b3VjaC1pY29uLnBuZz8xNDkxMzA3NzU0Ij4KICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iL2Zhdmljb24uaWNvPzE0OTEzMDc3NTQiIHR5cGU9ImltYWdlL3gtaWNvbiI+CgogIDx0aXRsZT5Qcm9QdWJsaWNhPC90aXRsZT4KPC9oZWFkPgoKPGJvZHkgY2xhc3M9ImhvbWUiPgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLy93d3cucHJvcHVibGljYS5vcmcvanMvcHVibGljL2Fzc2V0cy9iZWFjb25zLmpzIj48L3NjcmlwdD4KCgogIDxoZWFkZXIgY2xhc3M9InNoZWxsIj4KICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnLyIgaWQ9ImRvcm90aHkiIGNsYXNzPSJ3TmFycm93Ij48L2E+CiAgICA8YXNpZGUgaWQ9ImhlYWRlci1kb25hdGUtbW9iaWxlIiBjbGFzcz0id01lZCI+CiAgICAgIDxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2RvbmF0ZTMvIj5Eb25hdGU8L2E+PC9oMT4KICAgIDwvYXNpZGU+CgogICAgPGRpdiBpZD0iaC13YWZlcjEiPgogICAgICAKICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciI+CiAgICAgICAgICA8IS0tIDxhIGlkPSJsZWFrLXByb21vIiBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL2hvdy10by1sZWFrLXRvLXByb3B1YmxpY2EiPjxzdHJvbmc+TGVhayB0byBVczo8L3N0cm9uZz4gSGF2ZSBldmlkZW5jZSBvZiBwb3dlcmZ1bCBwZW9wbGUgZG9pbmcgdGhlIHdyb25nIHRoaW5nPyBIZXJl4oCZcyBob3cgdG8gbGV0IHVzIGtub3cuPC9hPiAtLT4KICAgICAgICAgIDxuYXYgaWQ9ImRvbnQtbWlzcyI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciB1bndyYXBwZXIiPjwvZGl2PgogICAgICAgICAgPC9uYXY+CiAgICAgIDwvZGl2PjwhLS0gZW5kIC53cmFwcGVyIC0tPgogICAgICA8L2Rpdj48IS0tIGVuZCAuaC13YWZlci0xIC0tPgogICAgCiAgICA8ZGl2IGlkPSJoLXdhZmVyMiI+ICAgICAKICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0iZG9uYXRlIj4KICAgICAgICAgIDxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2RvbmF0ZTMvIj5Eb25hdGU8L2E+PC9oMT4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICA8ZGl2IGlkPSJzZW8taGdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvIiBjbGFzcz0icG5nZml4Ij5Qcm9QdWJsaWNhPC9hPjwvaDE+CiAgICAgICAgICAgICAgICAgICAgPGgyPkpvdXJuYWxpc20gaW4gdGhlIFB1YmxpYyBJbnRlcmVzdDwvaDI+CiAgICAgICAgPC9kaXY+PCEtLSBlbmQgI3Nlby1oZ3JvdXAgLS0+CiAgICAgICAgCiAgICAgICAgPGZvcm0gY2xhc3M9Imhhcy14aWQgZW1haWwtc3ViIiBpZD0iZnJlZWZvcm0iIG1ldGhvZD0icG9zdCIgYWN0aW9uPSJodHRwczovL2dvLnBhcmRvdC5jb20vbC8xMjU0MTEvMjAxNS0xMi0wNC9yNXgiPgogICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vZDF0OHhmaTduMmdicjEuY2xvdWRmcm9udC5uZXQvZGVwbG95L2ltYWdlcy9jb21tb24vaWNvbi1tYWlsLTI4LnBuZyI+CiAgICAgICAgICA8bGFiZWwgZm9yPSJlbWFpbCI+UmVjZWl2ZSBvdXIgdG9wIHN0b3JpZXMgZGFpbHk8L2xhYmVsPgogICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiBwbGFjZWhvbGRlcj0iRW1haWwgYWRkcmVzcyIgdHlwZT0iZW1haWwiPgogICAgICAgICAgPGlucHV0IHZhbHVlPSJTdWJzY3JpYmUiIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJwb3BwZXIiPgogICAgICAgICAgICA8aW5wdXQgbmFtZT0icG9zdGFsY29kZSIgcGxhY2Vob2xkZXI9IlppcCBjb2RlIiB0eXBlPSJ0ZXh0Ij4KICAgICAgICAgICAgPGxhYmVsIGZvcj0iemlwY29kZSI+b3B0aW9uYWw8L2xhYmVsPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTsgbGVmdDotOTk5OXB4OyB0b3A6IC05OTk5cHg7Ij4KICAgICAgICAgICAgPGxhYmVsIGZvcj0icGFyZG90X2V4dHJhX2ZpZWxkIj5Db21tZW50czwvbGFiZWw+CiAgICAgICAgICAgIDxpbnB1dCBpZD0icGFyZG90X2V4dHJhX2ZpZWxkIiBuYW1lPSJwYXJkb3RfZXh0cmFfZmllbGQiIHR5cGU9InRleHQiPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9mb3JtPgoKICAgICAgPC9kaXY+PCEtLSBlbmQgLndyYXBwZXIgLS0+CiAgICA8L2Rpdj48IS0tIGVuZCAuaC13YWZlci0yIC0tPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2pzL3B1YmxpYy9hc3NldHMvZ29vZ2xlX2Fkc19ib290LmpzPzIwMTIxMDE1MDEiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD4KPHNjcmlwdD5nb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0eXBlJywgJ2hvbWVwYWdlJyk7PC9zY3JpcHQ+CiAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2pzL3B1YmxpYy9hc3NldHMvZ29vZ2xlX2Fkcy5qcz8yMDEyMTAxNTAxIiBjaGFyc2V0PSJ1dGYtOCI+PC9zY3JpcHQ+CgoJPGRpdiBpZD0iaC13YWZlcjMiPgkKCQkJPGRpdiBjbGFzcz0id3JhcHBlciI+CgkJCQkJCTxuYXY+CgkJCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy8iICBjbGFzcz0iYWN0aXZlIj5Ib21lPC9hPgoJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvaW52ZXN0aWdhdGlvbnMvIiA+PHNwYW4gY2xhc3M9IndGdWxsIj5JbnZlc3RpZ2F0aW9uczwvc3Bhbj48c3BhbiBjbGFzcz0id05hcnJvdyI+UHJvamVjdHM8L3NwYW4+PC9hPgoJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvZGF0YS8iIGNsYXNzPSJ3TWVkIHdGdWxsICI+RGF0YTwvYT4KCQkJCTxhIGhyZWY9Imh0dHBzOi8vcHJvamVjdHMucHJvcHVibGljYS5vcmcvbXVja3JlYWRzLyIgY2xhc3M9IndNZWQgd0Z1bGwgIj5NdWNrUmVhZHM8L2E+CgkJCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9nZXRpbnZvbHZlZC8iID5HZXQgSW52b2x2ZWQ8L2E+CiAgCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2Fib3V0LyIgY2xhc3M9IiI+PHNwYW4gY2xhc3M9IndGdWxsIj5BYm91dCBVczwvc3Bhbj48c3BhbiBjbGFzcz0id05hcnJvdyI+QWJvdXQ8L3NwYW4+PC9hPgoJCQk8L25hdj4KCQkJPGFzaWRlIGNsYXNzPSJmYiI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Byb3B1YmxpY2EvIj4KICAJCQkJPGltZyBzcmM9Imh0dHBzOi8vZDF0OHhmaTduMmdicjEuY2xvdWRmcm9udC5uZXQvZGVwbG95L2ltYWdlcy9jb21tb24vaWNvbi1mYi10b3AtbmF2LnN2ZyI+CiAgICAgICAgPC9hPgoJCQk8L2FzaWRlPgoJCQk8YXNpZGUgY2xhc3M9InR3Ij4KICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL3Byb3B1YmxpY2EiPgogIAkJCQk8aW1nIHNyYz0iaHR0cHM6Ly9kMXQ4eGZpN24yZ2JyMS5jbG91ZGZyb250Lm5ldC9kZXBsb3kvaW1hZ2VzL2NvbW1vbi9pY29uLXR3LXRvcC1uYXYuc3ZnIj4KICAgICAgICA8L2E+CgkJCTwvYXNpZGU+CiAJCQk8ZGl2IGlkPSJzZWFyY2gtdG9nZ2xlciI+CiAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id05hcnJvdyBzZWFyY2gtdG9nZ2xlIiBpZD0ic2VhcmNoLWdsYXNzIj48L2Rpdj4KCQkJPGZvcm0gYWN0aW9uPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZWFyY2gvc2VhcmNoLnBocCIgbWV0aG9kPSJnZXQiPgoJCQkJPGlucHV0IHR5cGU9InNlYXJjaCIgcGxhY2Vob2xkZXI9IlNlYXJjaCBQcm9QdWJsaWNhIiBuYW1lPSJxc3MiPgoJCQkJPGlucHV0IHR5cGU9ImltYWdlIiBzcmM9Imh0dHBzOi8vZDF0OHhmaTduMmdicjEuY2xvdWRmcm9udC5uZXQvZGVwbG95L2ltYWdlcy9jb21tb24vaWNuLXNlYXJjaC5zdmciPgoJCQkJPGRpdiBjbGFzcz0id05hcnJvdyBidG4taW9zIHNlYXJjaC10b2dnbGUiPkNhbmNlbDwvZGl2PgoJCQk8L2Zvcm0+CgkJCTwvZGl2PgoJCTwvZGl2PjwhLS0gL3dyYXBwZXIgLS0+Cgk8L2Rpdj48IS0tIC9oLXdhZmVyLTMgLS0+CQkKPC9oZWFkZXI+Cgo8IS0tIFRvcF9QdXNoZG93biAtLT4KPGRpdiBpZD0nZ29vZ2xlLVRvcF9QdXNoZG93bicgc3R5bGU9InotaW5kZXg6IDM7IiA+CjxzY3JpcHQ+CiAgZ29vZ2xldGFnLmRpc3BsYXkoJ2dvb2dsZS1Ub3BfUHVzaGRvd24nKTsKPC9zY3JpcHQ+CjwvZGl2PgoKPGRpdiBpZD0icGFnZSI+CiAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KCiAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwhLS0gYmVnaW4gc3BldiAtLT4KCjxzdHlsZT4KCi50cnVtcC1wcm9tbywgLnRydW1wLXByb21vOmFmdGVyLCAudHJ1bXAtcHJvbW86YmVmb3JlLCAudHJ1bXAtcHJvbW8gKiB7Cgktd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CgktbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7Cglib3gtc2l6aW5nOiBib3JkZXItYm94Owp9CgouZ3JvdXA6YWZ0ZXIgewoJY29udGVudDogIi4iOwoJZGlzcGxheTogYmxvY2s7CgloZWlnaHQ6IDA7CgljbGVhcjogYm90aDsKCXZpc2liaWxpdHk6IGhpZGRlbjsKfQoKLnRydW1wLXByb21vIHsKCXdpZHRoOiAxMDAlOwoJcGFkZGluZzogMThweCAyMThweCAxNXB4IDE4cHg7CgltYXJnaW46IDIwcHggMCAwIDA7CgkvKiBmb3Igb25lIGhlYWRsaW5lICovCgliYWNrZ3JvdW5kOgoJCXVybCgnaHR0cDovL3Byb3B1YmxpY2EuczMuYW1hem9uYXdzLmNvbS9wcm9qZWN0cy9ob21lcGFnZS1iYW5uZXJzL3RydW1wLXNpbG8ucG5nJykKCQlyaWdodCAyMHB4IGJvdHRvbSAtNDNweCAvIDE4MHB4IGF1dG8KCQluby1yZXBlYXQKCQkjNmVhZWUzOwoJLypib3JkZXItcmFkaXVzOiAuMjVlbTsqLwoJb3ZlcmZsb3c6IGhpZGRlbjsKCWZvbnQtc2l6ZTogMS4yNWVtOwoJY29sb3I6IGJsYWNrOwoJcG9zaXRpb246IHJlbGF0aXZlOwp9CgoudHJ1bXAtcHJvbW8gaDEgewoJZm9udC1zaXplOiAxLjRlbTsKCWxpbmUtaGVpZ2h0OiAxOwoJdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKCWxldHRlci1zcGFjaW5nOiAwLjAyNWVtOwp9CgoudHJ1bXAtcHJvbW8gaDEgYTpob3ZlciwKLnRydW1wLXByb21vIGgxIGE6Zm9jdXMgewoJY29sb3I6IGJsYWNrOwoJLypib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLDAsMCwuNSk7Ki8KfQoKLnRydW1wLXByb21vIGgxIGE6YWZ0ZXIgewoJLypjb250ZW50OiAiIEZ1bGwgQ292ZXJhZ2UgXDIxOTIiOyovIC8qIHJpZ2h0IGFycm93ICovCgkvKmNvbG9yOiAjMjI2MkNDOyovCglmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKCWZvbnQtc2l6ZTogMC42ZW07CgkvKmZvbnQtd2VpZ2h0OiBub3JtYWw7Ki8KCS8qbGV0dGVyLXNwYWNpbmc6IC4wNGVtOyovCn0KCi50cnVtcC1wcm9tbyBoMSBhOmhvdmVyIHNwYW4sCi50cnVtcC1wcm9tbyBoMSBhOmZvY3VzIHNwYW4gewp9CgoudHJ1bXAtcHJvbW8gaDIgewoJbGluZS1oZWlnaHQ6IDEuMzsKfQoudHJ1bXAtcHJvbW8gaDIgYSB7Cgljb2xvcjogYmxhY2s7Cn0KCi50cnVtcC1wcm9tbyBoMiBhOmhvdmVyLAoudHJ1bXAtcHJvbW8gaDIgYTpmb2N1cyB7Cgl0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKfQoKLnRydW1wLXByb21vIGgyIHsKCW1hcmdpbi10b3A6IDAuMjVlbTsKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODAwcHgpIHsgLyogYW5kIChtaW4td2lkdGg6IDQ4MXB4KSAqLwoKCS50cnVtcC1wcm9tbyB7CgkJYmFja2dyb3VuZC1pbWFnZTogbm9uZTsKCQlwYWRkaW5nOiAxOHB4OwoJfQoKCS50cnVtcC1wcm9tbyBoMSB7CgkJLyptYXJnaW46IDAgNTBweDsqLwoJfQoKCS50cnVtcC1wcm9tbyBoMSBhOmFmdGVyIHsKCQkvKm1hcmdpbjogLjVlbSAwOyovCgl9Cgp9CgpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkgewoJLnRydW1wLXByb21vIHsKCQl0ZXh0LWFsaWduOiBjZW50ZXI7Cgl9CgkudHJ1bXAtcHJvbW8gaDEgc3BhbiB7CgkJZGlzcGxheTogaW5saW5lLWJsb2NrOwoJfQp9Cgo8L3N0eWxlPgoKPGRpdiBjbGFzcz0idHJ1bXAtcHJvbW8gZ3JvdXAiPgoJPGgxIGNsYXNzPSJ0aXRsZSI+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvdHJ1bXAtYWRtaW5pc3RyYXRpb24vIj5UaGUgVHJ1bXAgQWRtaW5pc3RyYXRpb248L2E+PC9oMT4KCTxoMj48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy90cnVtcC1hZG1pbmlzdHJhdGlvbi8iPk9uZ29pbmcgY292ZXJhZ2Ugb2YgdGhlIDQ1dGggUHJlc2lkZW50IGFuZCBoaXMgbmV3IGFkbWluaXN0cmF0aW9uLjwvYT48L2gyPgo8L2Rpdj4KCjwhLS0gZW5kIC50cnVtcC1wcm9tbyAtLT4KCiAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBpZD0ibWVhdCI+CiAgICAgICAgICAgIDxzZWN0aW9uIGlkPSJwYXJmYWl0Ij4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmYm94LW1lZGl1bSI+CiAgICAgICAgICAgICAgICAgICAgPHNlY3Rpb24gaWQ9ImYxIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGZpZ3VyZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvd2hlbi10aGUtZGVzaWduZXItc2hvd3MtdXAtaW4tdGhlLWRlc2lnbi8iPjxpbWcgc3JjPSIvaW1hZ2VzLzIwMTcwNDA0LXZpc3VhbC1ldmlkZW5jZS1iLTM5MHgyNjAuanBnIiB3aWR0aD0iMzAwIiBjbGFzcz0id0Z1bGwiLz48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX2xlYWRfbmdlbi8yMDE3MDQwNC12aXN1YWwtZXZpZGVuY2UtYi0zMDB4MjAwLmpwZyIgY2xhc3M9IndOYXJyb3ciIHdpZHRoPSIyNzgiIGhlaWdodD0iMTg1Ii8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aGVhZGVyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL3doZW4tdGhlLWRlc2lnbmVyLXNob3dzLXVwLWluLXRoZS1kZXNpZ24vIiBjbGFzcz0idGl0bGUtbGluayI+V2hlbiB0aGUgRGVzaWduZXIgU2hvd3MgVXAgSW4gdGhlIERlc2lnbjwvYT48L2gxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJieWxpbmUiPgoKCgoKCmJ5IDxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvc2l0ZS9hdXRob3IvbGVuYV9ncm9lZ2VyLyI+TGVuYSBHcm9lZ2VyPC9hPjxiciAvPiBQcm9QdWJsaWNhLCAgOSBtaW51dGVzIGFnbzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaGVhZGVyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgSG93IG91ciBhc3N1bXB0aW9ucywgcGVyc3BlY3RpdmVzLCBpbnR1aXRpb25zICYjODIxMjsgYW5kIHllcywgb3VyIGJpYXNlcyAmIzgyMTI7IHNoYXBlIHdoYXQgd2UgZGVzaWduIGFuZCBob3cgd2UgZGVzaWduIGl0LiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXNpZGUgY2xhc3M9InJlbGF0ZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hc2lkZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPgogICAgICAgICAgICAgICAgPC9kaXY+PCEtLSBlbmQgLmZib3gtbWVkaXVtIC0tPgoKCgogICAgICAgICAgICAgICAgPHNlY3Rpb24gaWQ9ImYyIj4KICAgICAgICAgICAgICAgICAgICA8ZmlndXJlPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL3RvbS1wcmljZXMtMTUwMDAwLXBsdXMtc3RvY2std2luZGZhbGwvIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS8yMDE3MDMwMy10b20tcHJpY2UtMTQweDE0MC5qcGciIGFsdD0iVG9tIFByaWNlJiM4MjE3O3MgJDE1MCwwMDAtUGx1cyBTdG9jayBXaW5kZmFsbCIgLz48L2E+CiAgICAgICAgICAgICAgICAgICAgPC9maWd1cmU+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoZWFkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS90b20tcHJpY2VzLTE1MDAwMC1wbHVzLXN0b2NrLXdpbmRmYWxsLyIgY2xhc3M9InRpdGxlLWxpbmsiPlRvbSBQcmljZSdzICQxNTAsMDAwLVBsdXMgU3RvY2sgV2luZGZhbGw8L2E+PC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJieWxpbmUiPgoKCgoKCmJ5IDxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvc2l0ZS9hdXRob3Ivcm9iZXJ0X2ZhdHVyZWNoaS8iPlJvYmVydCBGYXR1cmVjaGk8L2E+PGJyIC8+IFByb1B1YmxpY2EsICBZZXN0ZXJkYXksIDQ6MzAgcC5tLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaGVhZGVyPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9zZWN0aW9uPgoKCgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8c2VjdGlvbiBpZD0iZjMiPgogICAgICAgICAgICAgICAgICAgIDxmaWd1cmU+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvdHJ1bXAtcHVsbC1tb25leS1oaXMtYnVzaW5lc3Nlcy13aGVuZXZlci1oZS13YW50cy13aXRob3V0LXRlbGxpbmctdXMvIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS8yMDE3MDQwMy10cnVtcC10cnVzdC0xNDB4MTQwLmpwZyIgYWx0PSJUcnVtcCBDYW4gUHVsbCBNb25leSBGcm9tIEhpcyBCdXNpbmVzc2VzIFdoZW5ldmVyIEhlIFdhbnRzICYjODIxMjsgV2l0aG91dCBFdmVyIFRlbGxpbmcgVXMiIC8+PC9hPgogICAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJveC1mZWF0dXJlLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aGVhZGVyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvdHJ1bXAtcHVsbC1tb25leS1oaXMtYnVzaW5lc3Nlcy13aGVuZXZlci1oZS13YW50cy13aXRob3V0LXRlbGxpbmctdXMvIiBjbGFzcz0idGl0bGUtbGluayI+VHJ1bXAgQ2FuIFB1bGwgTW9uZXkgRnJvbSBIaXMgQnVzaW5lc3NlcyBXaGVuZXZlciBIZSBXYW50cyDigJQgV2l0aG91dCBFdmVyIFRlbGxpbmcgVXM8L2E+PC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJieWxpbmUiPgoKCgoKCmJ5IDxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvc2l0ZS9hdXRob3IvZGVyZWtfa3Jhdml0ei8iIHRpdGxlPSJWaWV3IERlcmVrIEtyYXZpdHoncyBvdGhlciBhcnRpY2xlcyI+RGVyZWsgS3Jhdml0ejwvYT4gYW5kIDxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvc2l0ZS9hdXRob3IvYWxfc2hhdy8iIHRpdGxlPSJWaWV3IEFsIFNoYXcncyBvdGhlciBhcnRpY2xlcyI+QWwgU2hhdzwvYT48YnIgLz4gUHJvUHVibGljYSwgIFllc3RlcmRheSwgOCBhLm0uPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L3NlY3Rpb24+CgoKCiAgICAgICAgICAgIDwvc2VjdGlvbj48IS0tIGVuZCAjcGFyZmFpdCAtLT4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb21vLXdyYXBwZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvbW8gcHJvbW8tZnVsbCI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9ob3ctdG8tbGVhay10by1wcm9wdWJsaWNhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgxPkxlYWsgdG8gVXM8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICA8aDI+SGF2ZSBldmlkZW5jZSBvZiBwb3dlcmZ1bCBwZW9wbGUgZG9pbmcgdGhlIHdyb25nIHRoaW5nPyBMZXQgdXMga25vdzwvaDI+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PjwhLS0gZW5kIG1pbmkgcHJvbW8tYmFubmVycyAtLT4KCiAgICAgICAgICAgICAgICA8c2NyaXB0IHNyYz0iLy9jb25uZWN0LmZhY2Vib29rLm5ldC9lbl9VUy9hbGwuanMiPjwvc2NyaXB0Pgo8ZGl2IGlkPSJmYi1yb290Ij48L2Rpdj4KPHNjcmlwdD4KICBGQi5pbml0KHsKICAgIGFwcElkICAgICAgOiAnMjI5ODYyNjU3MTMwNTU3JywgLy8gQXBwIElECiAgICBzdGF0dXMgICAgIDogdHJ1ZSwgLy8gY2hlY2sgbG9naW4gc3RhdHVzCiAgICBjb29raWUgICAgIDogdHJ1ZSwgLy8gZW5hYmxlIGNvb2tpZXMgdG8gYWxsb3cgdGhlIHNlcnZlciB0byBhY2Nlc3MgdGhlIHNlc3Npb24KICAgIHhmYm1sICAgICAgOiB0cnVlICAvLyBwYXJzZSBYRkJNTAogIH0pOwo8L3NjcmlwdD4KCjxkaXYgaWQ9ImphbWIiIGNsYXNzPSJ3TmFycm93Ij4KCiAgCgogIDxhc2lkZSBjbGFzcz0iYWQiPgo8IS0tIFJpZ2h0X1JhaWxfUHVzaGRvd25fTW9iaWxlX09ubHkgLS0+CjxkaXYgaWQ9J2dvb2dsZS1SaWdodF9SYWlsX1B1c2hkb3duX01vYmlsZV9Pbmx5Jz4KICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CiAgICBnb29nbGV0YWcuZGlzcGxheSgnZ29vZ2xlLVJpZ2h0X1JhaWxfUHVzaGRvd25fTW9iaWxlX09ubHknKTsKICA8L3NjcmlwdD4KPC9kaXY+CjwvYXNpZGU+CiAgICA8YXNpZGUgY2xhc3M9Im1vZHVsZS1hY2NvcmRpb24tc21hbGwiPgogICAgIAogICAgICAgPGRpdiBjbGFzcz0iYWNjb3JkaW9uLWhlYWRlciI+CiAgICAgICAgICA8aDI+TWFqb3IgUHJvamVjdHM8L2gyPgogICAgICAgICAgPHA+PGEgaHJlZj0iL2ludmVzdGlnYXRpb25zIj5zZWUgYWxsICZyYXF1bzs8L2E+PC9wPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgICAgCiAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvbWFjaGluZS1iaWFzLyIgY2xhc3M9IiI+PGRpdiBjbGFzcz0iYWMtdGFiIj4KICAgICAgICA8aDMgY2xhc3M9InRpdGxlLWxpbmsiPk1hY2hpbmUgQmlhczwvaDM+CiAgICAgICAgPGg0IGNsYXNzPSJ0aXRsZS1saW5rIj48L2g0PgogICAgICAgICAgPC9kaXY+PC9hPgogICAgICAgICAKICAgICAgICAgCiAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvdGhlLXJlbnQtcmFja2V0LyIgY2xhc3M9IiI+PGRpdiBjbGFzcz0iYWMtdGFiIj4KICAgICAgICA8aDMgY2xhc3M9InRpdGxlLWxpbmsiPlRoZSBSZW50IFJhY2tldDwvaDM+CiAgICAgICAgPGg0IGNsYXNzPSJ0aXRsZS1saW5rIj5Ib3cgTGFuZGxvcmRzIFNpZGVzdGVwIFRlbmFudCBQcm90ZWN0aW9ucyBpbiBOZXcgWW9yayBDaXR5PC9oND4KICAgICAgICAgIDwvZGl2PjwvYT4KICAgICAgICAgCiAgICAgICAgIAogICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL2ltbWlncmF0aW9uLyIgY2xhc3M9IiI+PGRpdiBjbGFzcz0iYWMtdGFiIj4KICAgICAgICA8aDMgY2xhc3M9InRpdGxlLWxpbmsiPkltbWlncmF0aW9uPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPjwvaDQ+CiAgICAgICAgICA8L2Rpdj48L2E+CiAgICAgICAgIAogICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy90aGUtYnJlYWtkb3duLyIgY2xhc3M9IiI+PGRpdiBjbGFzcz0iYWMtdGFiIj4KICAgICAgICA8aDMgY2xhc3M9InRpdGxlLWxpbmsiPlRoZSBCcmVha2Rvd248L2gzPgogICAgICAgIDxoNCBjbGFzcz0idGl0bGUtbGluayI+SG93IHBvbGl0aWNzIGFuZCBnb3Zlcm5tZW50IHJlYWxseSB3b3JrLCBhbmQgd2h5IHRoZXkgZG9uJiM4MjE3O3QuIDwvaDQ+CiAgICAgICAgICA8L2Rpdj48L2E+CiAgICAgICAgIAogICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy9lbGVjdGlvbmxhbmQvIiBjbGFzcz0iIj48ZGl2IGNsYXNzPSJhYy10YWIiPgogICAgICAgIDxoMyBjbGFzcz0idGl0bGUtbGluayI+RWxlY3Rpb25sYW5kPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPk1vbml0b3JpbmcgYWNjZXNzIHRvIHRoZSB2b3RlIGluIHJlYWwgdGltZS48L2g0PgogICAgICAgICAgPC9kaXY+PC9hPgogICAgICAgICAKICAgICAgICAgCiAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvcmVsaXZpbmctYWdlbnQtb3JhbmdlLyIgY2xhc3M9IiI+PGRpdiBjbGFzcz0iYWMtdGFiIj4KICAgICAgICA8aDMgY2xhc3M9InRpdGxlLWxpbmsiPlJlbGl2aW5nIEFnZW50IE9yYW5nZTwvaDM+CiAgICAgICAgPGg0IGNsYXNzPSJ0aXRsZS1saW5rIj48L2g0PgogICAgICAgICAgPC9kaXY+PC9hPgogICAgICAgICAKICAgICAgICAgCiAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvaGVsbC1hbmQtaGlnaC13YXRlci8iIGNsYXNzPSIiPjxkaXYgY2xhc3M9ImFjLXRhYiI+CiAgICAgICAgPGgzIGNsYXNzPSJ0aXRsZS1saW5rIj5IZWxsIGFuZCBIaWdoIFdhdGVyPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPjwvaDQ+CiAgICAgICAgICA8L2Rpdj48L2E+CiAgICAgICAgIAogICAgICAgICAKICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy9idXN0ZWQvIiBjbGFzcz0iIj48ZGl2IGNsYXNzPSJhYy10YWIiPgogICAgICAgIDxoMyBjbGFzcz0idGl0bGUtbGluayI+QnVzdGVkPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPjwvaDQ+CiAgICAgICAgICA8L2Rpdj48L2E+CiAgICAgICAgIAogICAgICAKICAgIDwvYXNpZGU+CiAgPGFzaWRlIGNsYXNzPSJhZCI+Cgk8IS0tIFJ0X1NkYnJfTW9iaWxlLU9ubHkzMDB4MjUwIC0tPgoJPGRpdiBpZD0nZ29vZ2xlLVJ0X1NkYnJfTW9iaWxlLU9ubHkzMDB4MjUwLTInPgoJCTxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KCQkJZ29vZ2xldGFnLmRpc3BsYXkoJ2dvb2dsZS1SdF9TZGJyX01vYmlsZS1Pbmx5MzAweDI1MC0yJyk7CgkJPC9zY3JpcHQ+Cgk8L2Rpdj4KPC9hc2lkZT4KICAKPHN0eWxlPgphc2lkZS5uZXJkX2Jsb2cgeyB3aWR0aDoyOTBweDsgYmFja2dyb3VuZDogd2hpdGU7IGJvcmRlcjoxcHggc29saWQgI2NlY2VjZTsgcGFkZGluZzoxMHB4IDVweDsgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDEwcHggMHB4O30KYXNpZGUubmVyZF9ibG9nIGgxIHsgcGFkZGluZzoxMHB4IDBweCAwcHg7IGZvbnQtc2l6ZToyNHB4OyBtYXJnaW4tYm90dG9tOiAxcHg7IGNvbG9yOmJsYWNrO30KYXNpZGUubmVyZF9ibG9nIHAgYSB7IGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjExcHg7IGNvbG9yOmJsYWNrO30KYXNpZGUubmVyZF9ibG9nIHAgYTpob3ZlcnsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBjb2xvcjpibGFjazt9Cjwvc3R5bGU+Cgo8YXNpZGUgY2xhc3M9Im5lcmRfYmxvZyI+CjxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvbmVyZHMiPgo8c3Bhbj48aW1nIHNyYz0iaHR0cHM6Ly9zdGF0aWMucHJvcHVibGljYS5vcmcvaW1hZ2VzL25lcmRibG9nX3Byb21vaW1nLnBuZyIgd2lkdGg9IjI4MHB4Ii8+PC9zcGFuPjwvYT4KPGgxPjxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvbmVyZHMiPlRoZSBQcm9QdWJsaWNhIE5lcmQgQmxvZzwvYT48L2gxPgo8cCBzdHlsZT0ibWFyZ2luLWJvdHRvbTowcHgiPjxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvbmVyZHMiPlNlY3JldHMgZm9yIERhdGEgSm91cm5hbGlzdHMgYW5kIE5ld3Nyb29tIERldmVsb3BlcnM8L2E+PC9wPgo8L2FzaWRlPgo8YXNpZGUgY2xhc3M9Im5lcmRfYmxvZyI+CjxhIGhyZWY9Imh0dHBzOi8vcHJvamVjdHMucHJvcHVibGljYS5vcmcvZGF0YS1zdG9yZS8iPgogIDxzcGFuPjxpbWcgc3JjPSJodHRwczovL3N0YXRpYy5wcm9wdWJsaWNhLm9yZy9wcm9qZWN0cy9kYXRhcHVibGljYS9kYXRhLXN0b3JlLXByb21vLmpwZyIgd2lkdGg9IjI4MHB4Ij48L3NwYW4+CjwvYT4KPGgxPjxhIGhyZWY9Imh0dHBzOi8vcHJvamVjdHMucHJvcHVibGljYS5vcmcvZGF0YS1zdG9yZS8iPlByb1B1YmxpY2EgRGF0YSBTdG9yZTwvYT48L2gxPgo8cCBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMHB4OyI+PGEgaHJlZj0iaHR0cHM6Ly9wcm9qZWN0cy5wcm9wdWJsaWNhLm9yZy9kYXRhLXN0b3JlLyI+RG93bmxvYWQgb3IgUHVyY2hhc2UgdGhlIERhdGEgQmVoaW5kIE91ciBKb3VybmFsaXNtPC9hPjwvcD4KPC9hc2lkZT4KCiAgICA8YXNpZGUgY2xhc3M9Im1vZHVsZS1taW5pIj4KICAgICAgPGZpZ3VyZT48YSBocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRuWmxzamdFOEhFJmZlYXR1cmU9YzQtb3ZlcnZpZXcmbGlzdD1VVXRDTDU4X0RhVmRWUm1ldjN5SEs3cGciPjxpbWcgc3JjPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9pbWFnZXMveW91dHViZV9wcmVzY3JpYmVyX2NoZWNrdXBfMTAweDU1LmpwZyI+PC9hPjwvZmlndXJlPgogICAgICA8aDE+PGEgaHJlZj0iaHR0cDovL3d3dy55b3V0dWJlLmNvbS91c2VyL3Byb3B1YmxpY2EiPjxpbWcgc3JjPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9pbWFnZXMvY29tbW9uL3lvdXR1YmUtMTYucG5nIj4gWW91VHViZSBDaGFubmVsPC9hPjwvaDE+CiAgICAgIDxwPjxhIGhyZWY9Imh0dHA6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1kblpsc2pnRThIRSZmZWF0dXJlPWM0LW92ZXJ2aWV3Jmxpc3Q9VVV0Q0w1OF9EYVZkVlJtZXYzeUhLN3BnIj5NZWRpY2FyZSBEcnVncyBhbmQgWW91OiBFeHBsb3JpbmcgUHJvUHVibGljYSdzIFByZXNjcmliZXIgQ2hlY2t1cDwvYT48L3A+CiAgICA8L2FzaWRlPgoKICAgIDxhc2lkZSBjbGFzcz0ibW9kdWxlLW1pbmkiPgogICAgICA8ZmlndXJlPjxhIGhyZWY9Ii9wb2RjYXN0Ij48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS9jYWNoZS9wcC1sb2dvLTE0MHgxNDBfNC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iV2UgV2FudCBZb3VyIFRob3VnaHRzIG9uIE91ciBQb2RjYXN0IiAvPjwvYT48L2ZpZ3VyZT4KICAgICAgPGgxPjxhIGhyZWY9Ii9wb2RjYXN0Ij5Qb2RjYXN0PC9hPjwvaDE+CiAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3BvZGNhc3QvaXRlbS93ZS13YW50LXlvdXItdGhvdWdodHMtb24tb3VyLXBvZGNhc3QvIj5XZSBXYW50IFlvdXIgVGhvdWdodHMgb24gT3VyIFBvZGNhc3Q8L2E+PC9wPgogICAgPC9hc2lkZT4KCiAgICA8YXNpZGUgY2xhc3M9Im1vZHVsZS1taW5pIj4KCiAgICAgIDxmaWd1cmU+PGEgaHJlZj0iL2Vib29rcyI+PGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9raW5kbGVfY292ZXJzL2NhY2hlL2JyZWFrZG93bi1jb3Zlci0xNDB4MTg2LTcweDkzLmpwZyIgd2lkdGg9IjcwIiBoZWlnaHQ9IjkzIiAgYWx0PSJUaGUgQnJlYWtkb3duOiBIb3cgUG9saXRpY3MgYW5kIEdvdmVybm1lbnQgUmVhbGx5IFdvcmssIGFuZCBXaHkgVGhleSBEb24mIzgyMTc7dCIgLz48L2E+PC9maWd1cmU+CiAgICAgIDxoMT48YSBocmVmPSIvZWJvb2tzIj5MYXRlc3QgRS1Cb29rPC9hPjwvaDE+CiAgICAgIDxwPjxhIGhyZWY9Ii9lYm9va3MiPlRoZSBCcmVha2Rvd246IEhvdyBQb2xpdGljcyBhbmQgR292ZXJubWVudCBSZWFsbHkgV29yaywgYW5kIFdoeSBUaGV5IERvbiYjODIxNzt0PC9hPjwvcD4KPHAgY2xhc3M9Im1vcmUiPjxhIGhyZWY9Ii9lYm9va3MiPlNlZSBhbGwgJnJhcXVvOzwvYT48L3A+CgogICAgPC9hc2lkZT4KCjxzdHlsZT4KLmNsZWFyZml4OmJlZm9yZSwgLmNsZWFyZml4OmFmdGVyIHtjb250ZW50OiAiICI7IGRpc3BsYXk6IHRhYmxlO30KLmNsZWFyZml4OmFmdGVyIHtjbGVhcjogYm90aDt9Ci5jbGVhcmZpeCB7Knpvb206IDE7fQojamFtYiAubW9kdWxlLmdpLWdyb3VwLXByb21veyBib3JkZXI6IHNvbGlkIDFweCAjZDJkMmQyOyBwYWRkaW5nOiAxNXB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmYmZiOyBtYXJnaW46IDEwcHggMDsgd2lkdGg6IGF1dG87fQouZ2ktZ3JvdXAtcHJvbW8gaGVhZGVye2ZvbnQ6IDEwcHgvMSAiSGVsdmV0aWNhIE5ldWUiLCJBcmlhbCIsc2Fucy1zZXJpZjsgY29sb3I6I2MzYzNjMzsgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgbGV0dGVyLXNwYWNpbmc6IC41cHg7IG1hcmdpbi1ib3R0b206IDNweDt9Ci5naS1ncm91cC1wcm9tbyBoMXtmb250LXNpemU6MjVweDsgbWFyZ2luLXRvcDogMHB4OyBtYXJnaW4tYm90dG9tOiAxNXB4O30KLmdpLWdyb3VwLXByb21vIHNlY3Rpb257Y2xlYXI6IGJvdGg7fQouZ2ktZ3JvdXAtcHJvbW8gc2VjdGlvbi5sYXN0e2JvcmRlci1ib3R0b206IHNvbGlkIDFweCAjZDJkMmQyO30KLmdpLWdyb3VwLXByb21vIHNlY3Rpb24gaW1ne2Zsb2F0OiBsZWZ0OyBjbGVhcjogbGVmdDsgbWFyZ2luLWJvdHRvbTogMTVweDt9Ci5naS1ncm91cC1wcm9tbyBzZWN0aW9uIGRpdnt3aWR0aDogMTgwcHg7IGZsb2F0OiByaWdodDt9CiNtZWF0IC5naS1ncm91cC1wcm9tbyBzZWN0aW9ue2Zsb2F0OiBub25lO30KLmdpLWdyb3VwLXByb21vICBzZWN0aW9uIGF7Y29sb3I6ICMwMDA7fQouZ2ktZ3JvdXAtcHJvbW8gZGl2IHB7Zm9udC13ZWlnaHQ6IGJvbGQ7IGZvbnQtc2l6ZTogMTNweDsgbGluZS1oZWlnaHQ6IDEuMjt9Ci5naS1ncm91cC1wcm9tbyBmb290ZXJ7cGFkZGluZy10b3A6IDE1cHg7IGNsZWFyOiBib3RoO30KLmdpLWdyb3VwLXByb21vIGZvb3RlciBwe2ZvbnQ6IGl0YWxpYyAxNXB4LzEuMyAiR2VvcmdpYSIsIHNlcmlmO30KLmdpLWdyb3VwLXByb21vIGEuYWN0aW9ue2Rpc3BsYXk6IGJsb2NrOyBoZWlnaHQ6IDMzcHg7IGxpbmUtaGVpZ2h0OiAzM3B4OyBtYXJnaW46IDE1cHggYXV0bzsgd2lkdGg6IDE2NXB4OyBmbG9hdDogbm9uZTsgY29sb3I6ICNmZmY7fQo8L3N0eWxlPgogPGFzaWRlIGNsYXNzPSJtb2R1bGUgZ2ktZ3JvdXAtcHJvbW8iPgo8aGVhZGVyPkdldCBJbnZvbHZlZDwvaGVhZGVyPgo8aDE+SGVscCBVcyBJbnZlc3RpZ2F0ZTwvaDE+Cgo8c2VjdGlvbiA+CiAgPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvZ2V0aW52b2x2ZWQvaXRlbS9oZWxwLXVzLWZhY3QtY2hlY2stbWVtYmVycy1vZi1jb25ncmVzcy1vbi10aGUtYWZmb3JkYWJsZS1jYXJlLWFjdC8iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vMjAxNzAzMDktYWNhLWNhbGxvdXQtMTQweDE0MF8xLmpwZyIgIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCI+CiAgICA8ZGl2PgogICAgICA8aGVhZGVyPjwvaGVhZGVyPgogICAgICA8cD5JcyBZb3VyIE1lbWJlciBvZiBDb25ncmVzcyBUZWxsaW5nIEl0IFN0cmFpZ2h0IE9uIFRoZSBBQ0E/IEhlbHAgVXMgRmFjdC1DaGVjayBUaGVtLjwvcD4KICAgIDwvZGl2PgogIDwvYT4KPC9zZWN0aW9uPgoKPHNlY3Rpb24gPgogIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2dldGludm9sdmVkL2l0ZW0vaGVscC1wcm9wdWJsaWNhLWludmVzdGlnYXRlLXdhc3RlZC1oZWFsdGgtY2FyZS1kb2xsYXJzLyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS9oZWFsdGhjYXJlLXdhc3RlLTE0MC5qcGciICB3aWR0aD0iNzAiIGhlaWdodD0iNzAiPgogICAgPGRpdj4KICAgICAgPGhlYWRlcj48L2hlYWRlcj4KICAgICAgPHA+QWJvdXQgJDc2NSBCaWxsaW9uIElzIFdhc3RlZCBFYWNoIFllYXIgb24gSGVhbHRoIENhcmUuIENhbiBZb3UgSGVscCBVcyBGaW5kIEl0PzwvcD4KICAgIDwvZGl2PgogIDwvYT4KPC9zZWN0aW9uPgoKPHNlY3Rpb24gY2xhc3M9Imxhc3QgY2xlYXJmaXgiPgogIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2dldGludm9sdmVkL2l0ZW0vaGVscC1wcm9wdWJsaWNhLWFuZC11c2EtdG9kYXktaW52ZXN0aWdhdGUtYWx0ZXJuYXRpdmUtc2Nob29scy8iPgogICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vMjAxNzAyMjEtYWx0LXNjaG9vbHMtY2FsbG91dC0xNDB4MTQwLmpwZyIgIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCI+CiAgICA8ZGl2PgogICAgICA8aGVhZGVyPjwvaGVhZGVyPgogICAgICA8cD5IZWxwIFByb1B1YmxpY2EgYW5kIFVTQSBUb2RheSBJbnZlc3RpZ2F0ZSBBbHRlcm5hdGl2ZSBTY2hvb2xzPC9wPgogICAgPC9kaXY+CiAgPC9hPgo8L3NlY3Rpb24+Cgo8Zm9vdGVyPgogIDxwPkpvaW4gUHJvUHVibGljYSdzIFJlcG9ydGluZyBOZXR3b3JrIGZvciB1cGRhdGVzIG9uIGZ1dHVyZSBhc3NpZ25tZW50cyBhbmQgaW52ZXN0aWdhdGlvbnMuPC9wPgogIDxhIGNsYXNzPSJhY3Rpb24iIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvZ2V0aW52b2x2ZWQvYWJvdXQ/dXRtX2NhbXBhaWduPWdpX3NpZ251cF9ob21lcGFnZSZ1dG1fc291cmNlPWdldGludm9sdmVkJnV0bV9tZWRpdW09Z2V0aW52b2x2ZWQjc2lnbnVwIj5TaWduIFVwPC9hPgo8L2Zvb3Rlcj4KIDwvYXNpZGU+CgogICAgICAgICAgPCEtLWdvb2dsZW9mZjogc25pcHBldC0tPgo8YXNpZGUgY2xhc3M9Im1vZHVsZS10YWJiZWQtMjAxMSI+IAogICAgPGgxIGNsYXNzPSJtb2R1bGUtdGl0bGUiPk91ciBIb3R0ZXN0IFN0b3JpZXM8L2gxPgogICAgPHVsIGNsYXNzPSJ0YWJzIj4KICAgICAgICA8bGk+PGEgaHJlZj0iI21vc3QtcmVhZCIgY2xhc3M9ImFjdGl2ZSI+TW9zdCBSZWFkPC9hPjwvbGk+CiAgICAgICAgCiAgICA8L3VsPgogICAgPGRpdiBjbGFzcz0icGFuZXMiPgogICAgICAgIDxkaXYgY2xhc3M9InRhYi1jb250ZW50IGFjdGl2ZSIgaWQ9Im1vc3QtcmVhZCI+CiAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZmlyc3QiPiZuYnNwOzwvbGk+CiAgICAgICAgICAgICAgICA8bGk+Jm5ic3A7PC9saT4KICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPgogICAgICAgICAgICAgICAgPGxpPiZuYnNwOzwvbGk+CiAgICAgICAgICAgICAgICA8bGk+Jm5ic3A7PC9saT4KICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPgogICAgICAgICAgICAgICAgPGxpPiZuYnNwOzwvbGk+CiAgICAgICAgICAgICAgICA8bGk+Jm5ic3A7PC9saT4KICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPgogICAgICAgICAgICAgICAgPGxpPiZuYnNwOzwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICA8L2Rpdj4KPC9hc2lkZT4KPCEtLWdvb2dsZW9uOiBzbmlwcGV0LS0+ICAgIAoKCgogIDwvZGl2PjwhLS0gL2phbWIgLS0+CgogICAgICAgICAgICAgICAgCQkJPHNlY3Rpb24gY2xhc3M9Im1ldGEtc3RhY2sgd05hcnJvdyI+CgkJCQk8YXNpZGUgaWQ9Im1ldGFzdGFjay1kb25hdGUiIGNsYXNzPSJ1bnRvZ2dsZXIiPgoJCQkJCTxoMT5TYWZlZ3VhcmQgdGhlIHB1YmxpYyBpbnRlcmVzdDwvaDE+CgkJCQkJPGRpdj4KCQkJCQkJPHA+U3VwcG9ydCBQcm9QdWJsaWNh4oCZcyBhd2FyZC13aW5uaW5nIGludmVzdGlnYXRpdmUgam91cm5hbGlzbS48L3A+CgkJCQkJCTxwIGNsYXNzPSJidG4tcm93Ij48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2RvbmF0ZTMvIiBjbGFzcz0iYnRuLWlvcyI+RG9uYXRlPC9hPjwvcD4JCQkJCQoJCQkJCTwvZGl2PgoJCQkJPC9hc2lkZT4KCQkJCTxhc2lkZSBpZD0ibWV0YXN0YWNrLW1haWxpbmdsaXN0IiBjbGFzcz0idG9nZ2xlciI+CgkJCQkJPGgxPlNpZ24tdXAgZm9yIG91ciBlbWFpbCBsaXN0PC9oMT4KCQkJCQk8ZGl2Pgo8Zm9ybSBjbGFzcz0iaGFzLXhpZCIgaWQ9J2ZyZWVmb3JtJyBtZXRob2Q9InBvc3QiIGFjdGlvbj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvIiAgPgo8ZGl2IGNsYXNzPSdoaWRkZW5GaWVsZHMnPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJBQ1QiIHZhbHVlPSI0MCIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iVVJJIiB2YWx1ZT0iaW5kZXgiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN0YXR1cyIgdmFsdWU9Im9wZW4iIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJldHVybiIgdmFsdWU9Ii9mb3Jtcy90aGFua195b3UiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlZGlyZWN0X29uX2R1cGxpY2F0ZSIgdmFsdWU9IiIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZHluYW1pY194aWQiIHZhbHVlPSJ5IiAvPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0cmFja2VyX2VtYWlsX29uZSIgdmFsdWU9IiIgLz4KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idHJhY2tlcl90ZW1wbGF0ZV9vbmUiIHZhbHVlPSIiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IlJFVCIgdmFsdWU9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvIiAvPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmb3JtX25hbWUiIHZhbHVlPSJkYWlseV9lbWFpbF9mb3JtIiAvPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhamF4X3JlcXVlc3QiIHZhbHVlPSJ5IiAvPgo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwYXJhbXNfaWQiIHZhbHVlPSIyODY0MTE5MDIiIC8+CjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InNpdGVfaWQiIHZhbHVlPSIxIiAvPgo8L2Rpdj4KCgoJCQkJPGlucHV0IHR5cGU9J2hpZGRlbicgdmFsdWU9JzEnIG5hbWU9J3N1YnNjcmliZV9kYWlseV9lbWFpbCcgLz4KCQkJCTxpbnB1dCB0eXBlPSJlbWFpbCIgbmFtZT0iZW1haWwiIHBsYWNlaG9sZGVyPSJFbWFpbCBhZGRyZXNzIj4KCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJwb3N0YWxjb2RlIiBwbGFjZWhvbGRlcj0iWmlwLWNvZGUiPgoJCQkJPGxhYmVsIGZvciJ6aXBjb2RlIj5vcHRpb25hbDwvbGFiZWw+CgkJCQk8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iU3Vic2NyaWJlIj4KPC9mb3JtPgoJCQkJCTwvZGl2PgoJCQkJPC9hc2lkZT4KCQkJCTxkaXYgY2xhc3M9IndOYXJyb3ciPgoJCQkJCTwhLS0gUnRfU2Ricl9Nb2JpbGUtT25seTMwMHgyNTAtMiAtLT4KCQkJCQk8ZGl2IGlkPSdnb29nbGUtUnRfU2Ricl9Nb2JpbGUtT25seTMwMHgyNTAtMic+CgkJCQkJPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgoJCQkJCWdvb2dsZXRhZy5kaXNwbGF5KCdnb29nbGUtUnRfU2Ricl9Nb2JpbGUtT25seTMwMHgyNTAtMicpOwoJCQkJCTwvc2NyaXB0PgoJCQkJCTwvZGl2PgoJCQkJPC9kaXY+CgkJCTwvc2VjdGlvbj48IS0tIC9tZXRhLXN0YWNrIC0tPgogICAgICAgICAgICA8c2VjdGlvbiBpZD0iYXJjaGl2ZSI+CiAgICAgICAgICAgICAgICA8c2VjdGlvbiBpZD0iZ2hvc3QiPgoKCTxhc2lkZSBjbGFzcz0ibW9kdWxlLXVwZGF0ZXMgcnNzIj4KCQk8YSBocmVmPSJodHRwOi8vZmVlZHMucHJvcHVibGljYS5vcmcvcHJvcHVibGljYS9tYWluIj48aW1nIHNyYz0iaHR0cDovL2Nkbi5wcm9wdWJsaWNhLm5ldC9kZXBsb3kvaW1hZ2VzL2NvbW1vbi9pY29uLTE2LXJzcy5wbmciIC8+PC9hPgoJCTxhIGhyZWY9Imh0dHA6Ly9mZWVkcy5wcm9wdWJsaWNhLm9yZy9wcm9wdWJsaWNhL21haW4iPlVwZGF0ZXMgb3ZlciBSU1M8L2E+Cgk8L2FzaWRlPgkKCgk8YXNpZGUgY2xhc3M9Im1vZHVsZS11cGRhdGVzIGVtYWlsIj4KCQk8YSBocmVmPSJodHRwOi8vZ28ucHJvcHVibGljYS5vcmcvc2lnbi11cCI+PGltZyBzcmM9Imh0dHA6Ly9jZG4ucHJvcHVibGljYS5uZXQvZGVwbG95L2ltYWdlcy9jb21tb24vaWNvbi0xNi1tYWlsLnBuZyIgLz48L2E+CgkJPGEgaHJlZj0iaHR0cDovL2dvLnByb3B1YmxpY2Eub3JnL3NpZ24tdXAiPlVwZGF0ZXMgYnkgZW1haWw8L2E+Cgk8L2FzaWRlPgoKCTxhc2lkZSBjbGFzcz0iZG9uYXRlLW1vZHVsZS0yMDE0MTItYyBkb25hdGUtcGhvdG8tYSBtb2R1bGUiPgoJCTxoMz5JdOKAmXMgbm90IHRvbyBsYXRlIHRvIDxzdHJvbmc+Vm90ZSBQcm9QdWJsaWNhPC9zdHJvbmc+PC9oMz4KCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2RvbmF0ZTMvIj5Eb25hdGU8L2E+Cgk8L2FzaWRlPgoKCTxhc2lkZSBjbGFzcz0ibW9kdWxlLW1lZGl1bSBhd2FyZHMiPgoJCTxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvYXdhcmRzLyI+PGltZyBzcmM9Imh0dHBzOi8vZDF0OHhmaTduMmdicjEuY2xvdWRmcm9udC5uZXQvZGVwbG95L2ltYWdlcy9jb21tb24vYXdhcmRzLW1vZHVsZS1mdWxsLnBuZyIgLz48L2E+CgkJPGgxPjxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvYXdhcmRzLyI+QXdhcmRzPC9hPjwvaDE+CgkJPHA+UHJvUHVibGljYSB3YXMgYSByZWNpcGllbnQgb2YgdGhlIDIwMTYgUHVsaXR6ZXIgUHJpemUgZm9yIEV4cGxhbmF0b3J5IFJlcG9ydGluZywgdGhlIDIwMTEgUHVsaXR6ZXIgUHJpemUgaW4gTmF0aW9uYWwgUmVwb3J0aW5nIGFuZCBhIDIwMTAgUHVsaXR6ZXIgUHJpemUgaW4gSW52ZXN0aWdhdGl2ZSBSZXBvcnRpbmcuPC9wPgoJCTxwPjxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvYXdhcmRzLyI+U2VlIHRoZSBmdWxsIGxpc3Qgb2Ygb3VyIGF3YXJkcyDCuzwvYT48L3A+Cgk8L2FzaWRlPgoKCTxhc2lkZSBjbGFzcz0ibW9kdWxlLW1lZGl1bSBjb21wbGFpbnRzIj4KCQk8aDE+Q29tcGxhaW50cyAmYW1wOyBDb3JyZWN0aW9uczwvaDE+CgkJPHA+VG8gY29udGFjdCB1cyB3aXRoIGNvbmNlcm5zIGFuZCBjb3JyZWN0aW9ucywgPGEgaHJlZj0ibWFpbHRvOmZlZWRiYWNrQHByb3B1YmxpY2Eub3JnIj5lbWFpbCB1czwvYT4uIEFsbCBlbWFpbHMgbWF5IGJlIHB1Ymxpc2hlZCB1bmxlc3MgeW91IHRlbGwgdXMgb3RoZXJ3aXNlLiA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL2Fib3V0L2NvcnJlY3Rpb25zIj5SZWFkIG91ciBjb3JyZWN0aW9uczwvYT4uPC9wPgoJPC9hc2lkZT4KCjwvc2VjdGlvbj4KICAgICAgICAgICAgICAgIAkJCQk8c2VjdGlvbiBpZD0icml2ZXIiPgoJCQkJCTxoMT5Nb3JlIFN0b3JpZXM8L2gxPgkKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hdHByb3B1YmxpY2EvaXRlbS9wcm9wdWJsaWNhLWlzLWhpcmluZy1hLWRldmVsb3BtZW50LW1hbmFnZXIvIj5ZZXN0ZXJkYXksIDU6NTEgcC5tLjwvYT48L3A+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJib3gtZmVhdHVyZS10ZXh0Ij4KCQkJCQkJCTxoZWFkZXI+CgkJCQkJCQkJPGgxPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2F0cHJvcHVibGljYS9pdGVtL3Byb3B1YmxpY2EtaXMtaGlyaW5nLWEtZGV2ZWxvcG1lbnQtbWFuYWdlci8iIGNsYXNzPSJ0aXRsZS1saW5rIj5Qcm9QdWJsaWNhIElzIEhpcmluZyBhIERldmVsb3BtZW50IE1hbmFnZXI8L2E+PC9oMT4KCQkJCQkJCTwvaGVhZGVyPgoJCQkJCQk8L2Rpdj4JCgkJCQkJPC9zZWN0aW9uPgogICAgICAgICAgICAKCgogICAgCiAgICAgICAgICAgIAkJCQkJPHNlY3Rpb24+CgkJCQkJCTxkaXYgY2xhc3M9InJpdmVyLW1ldGEiPgoJCQkJCQkJPGZpZ3VyZT4KCQkJCQkJCQk8YSBocmVmPSJodHRwczovL3Byb2plY3RzLnByb3B1YmxpY2Eub3JnL2dyYXBoaWNzL3RydW1wLXRydXN0Ij4KCQkJCQkJCQkgICAgCQkJCQkJCQkgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2NhY2hlLzIwMTcwNDAzLXRydW1wLXRydXN0LWFwcC0xNDB4MTQwLTcweDcwLmpwZyIgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIiAgYWx0PSJUcnVtcCYjODIxNztzIENoYW5naW5nIFRydXN0LCBBbm5vdGF0ZWQiIC8+CgkJCQkJCQkJICAgIAkJCQkJCQkJPC9hPgoJCQkJCQkJPC9maWd1cmU+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJib3gtZmVhdHVyZS10ZXh0Ij4KCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkKCQkJCQkJCTxoZWFkZXI+CgkJCQkJCQkJPGgxPjxhIGhyZWY9Imh0dHBzOi8vcHJvamVjdHMucHJvcHVibGljYS5vcmcvZ3JhcGhpY3MvdHJ1bXAtdHJ1c3QiIGNsYXNzPSJ0aXRsZS1saW5rIj5UcnVtcCYjODIxNztzIENoYW5naW5nIFRydXN0LCBBbm5vdGF0ZWQ8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL2FsX3NoYXcvIiB0aXRsZT0iVmlldyBBbCBTaGF3J3Mgb3RoZXIgYXJ0aWNsZXMiPkFsIFNoYXc8L2E+IGFuZCA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL2RlcmVrX2tyYXZpdHovIiB0aXRsZT0iVmlldyBEZXJlayBLcmF2aXR6J3Mgb3RoZXIgYXJ0aWNsZXMiPkRlcmVrIEtyYXZpdHo8L2E+PGJyIC8+IFByb1B1YmxpY2EsICBZZXN0ZXJkYXksIDc6NTkgYS5tLjwvcD4KCQkJCQkJCTwvaGVhZGVyPgoJCQkJCQkJPHA+SGVyZSYjODIxNztzIGFuIGFubm90YXRlZCBsb29rIGF0IG5vdGFibGUgY2hhbmdlcyB0byB0aGUgRG9uYWxkIEouIFRydW1wIFJldm9jYWJsZSBUcnVzdCYjODIxNztzIGNlcnRpZmljYXRpb24gZG9jdW1lbnQuPC9wPgoJCQkJCQk8L2Rpdj4JCgkJCQkJPC9zZWN0aW9uPgogICAgICAgICAgICAKCgogICAgCiAgICAgICAgICAgIAkJCQkJPHNlY3Rpb24+CgkJCQkJCTxkaXYgY2xhc3M9InJpdmVyLW1ldGEiPgoJCQkJCQkJPGZpZ3VyZT4KCQkJCQkJCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL3doaXRlLWhvdXNlLXdvdWxkbnQtcG9zdC10cnVtcC1zdGFmZmVycy1maW5hbmNpYWwtZGlzY2xvc3VyZXMvIj4KCQkJCQkJCQkgICAgCQkJCQkJCQkgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2NhY2hlLzIwMTcwNDAxLXdoaXRlLWhvdXNlLWRpc2Nsb3N1cmVzLTE0MHgxNDAtNzB4NzAuanBnIiB3aWR0aD0iNzAiIGhlaWdodD0iNzAiICBhbHQ9IlRoZSBXaGl0ZSBIb3VzZSBXb3VsZG4mIzgyMTc7dCBQb3N0IFRydW1wIFN0YWZmZXJzJiM4MjE3OyBGaW5hbmNpYWwgRGlzY2xvc3VyZXMuIFNvIFdlIERpZC4iIC8+CgkJCQkJCQkJICAgIAkJCQkJCQkJPC9hPgoJCQkJCQkJPC9maWd1cmU+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJib3gtZmVhdHVyZS10ZXh0Ij4KCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkKCQkJCQkJCTxoZWFkZXI+CgkJCQkJCQkJPGgxPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvd2hpdGUtaG91c2Utd291bGRudC1wb3N0LXRydW1wLXN0YWZmZXJzLWZpbmFuY2lhbC1kaXNjbG9zdXJlcy8iIGNsYXNzPSJ0aXRsZS1saW5rIj5UaGUgV2hpdGUgSG91c2UgV291bGRuJiM4MjE3O3QgUG9zdCBUcnVtcCBTdGFmZmVycyYjODIxNzsgRmluYW5jaWFsIERpc2Nsb3N1cmVzLiBTbyBXZSBEaWQuPC9hPjwvaDE+CgkJCQkJCQkJPHAgY2xhc3M9ImJ5bGluZSI+CgoKCgoKYnkgPGEgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2F1dGhvci9hcmlhbmFfdG9iaW4vIiB0aXRsZT0iVmlldyBBcmlhbmEgVG9iaW4ncyBvdGhlciBhcnRpY2xlcyI+QXJpYW5hIFRvYmluPC9hPiBhbmQgPGEgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2F1dGhvci9kZXJla19rcmF2aXR6LyIgdGl0bGU9IlZpZXcgRGVyZWsgS3Jhdml0eidzIG90aGVyIGFydGljbGVzIj5EZXJlayBLcmF2aXR6PC9hPjxiciAvPiBQcm9QdWJsaWNhLCAgQXByaWwgMSwgMTE6MzggYS5tLjwvcD4KCQkJCQkJCTwvaGVhZGVyPgoJCQkJCQkJPHA+SW4gcGFydG5lcnNoaXAgd2l0aCBUaGUgTmV3IFlvcmsgVGltZXMgYW5kIFRoZSBBc3NvY2lhdGVkIFByZXNzLCB3ZSYjODIxNztyZSBzaGFyaW5nIGZpbmFuY2lhbCBkaXNjbG9zdXJlcyBmb3IgZXZlcnlvbmUgdG8gbG9vayB0aHJvdWdoLCBpbmNsdWRpbmcgeW91LjwvcD4KCQkJCQkJPC9kaXY+CQoJCQkJCTwvc2VjdGlvbj4KICAgICAgICAgICAgCgoKICAgIAogICAgICAgICAgICAJCQkJCTxzZWN0aW9uPgoJCQkJCQk8ZGl2IGNsYXNzPSJyaXZlci1tZXRhIj4KCQkJCQkJCTxmaWd1cmU+CgkJCQkJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS90b20tcHJpY2UtaW50ZXJ2ZW5lZC1ydWxlLWh1cnQtZHJ1Zy1wcm9maXRzLXNhbWUtZGF5LWFjcXVpcmVkLWRydWctc3RvY2svIj4KCQkJCQkJCQkgICAgCQkJCQkJCQkgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2NhY2hlLzIwMTcwMzMxLXRvbS1wcmljZS1zdG9jay10cmFkZXMtMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iVG9tIFByaWNlIEludGVydmVuZWQgb24gUnVsZSBUaGF0IFdvdWxkIEh1cnQgRHJ1ZyBQcm9maXRzLCB0aGUgU2FtZSBEYXkgSGUgQWNxdWlyZWQgRHJ1ZyBTdG9jayIgLz4KCQkJCQkJCQkgICAgCQkJCQkJCQk8L2E+CgkJCQkJCQk8L2ZpZ3VyZT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImJveC1mZWF0dXJlLXRleHQiPgoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJPGhlYWRlcj4KCQkJCQkJCQk8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS90b20tcHJpY2UtaW50ZXJ2ZW5lZC1ydWxlLWh1cnQtZHJ1Zy1wcm9maXRzLXNhbWUtZGF5LWFjcXVpcmVkLWRydWctc3RvY2svIiBjbGFzcz0idGl0bGUtbGluayI+VG9tIFByaWNlIEludGVydmVuZWQgb24gUnVsZSBUaGF0IFdvdWxkIEh1cnQgRHJ1ZyBQcm9maXRzLCB0aGUgU2FtZSBEYXkgSGUgQWNxdWlyZWQgRHJ1ZyBTdG9jazwvYT48L2gxPgoJCQkJCQkJCTxwIGNsYXNzPSJieWxpbmUiPgoKCgoKCmJ5IDxhIGhyZWY9Imh0dHA6Ly93d3cucHJvcHVibGljYS5vcmcvc2l0ZS9hdXRob3Ivcm9iZXJ0X2ZhdHVyZWNoaS8iPlJvYmVydCBGYXR1cmVjaGk8L2E+PGJyIC8+IFByb1B1YmxpY2EsICBNYXJjaCAzMSwgMjo0NiBwLm0uPC9wPgoJCQkJCQkJPC9oZWFkZXI+CgkJCQkJCQk8cD5XaGlsZSBpbiBDb25ncmVzcywgSEhTIFNlY3JldGFyeSBUb20gUHJpY2UgYWN0ZWQgdG8gaGVscCBraWxsIGEgcnVsZSB0aGF0IHdvdWxkIGh1cnQgZHJ1ZyBjb21wYW55IHByb2ZpdHMgc2hvcnRseSBhZnRlciBoaXMgYnJva2VyIGJvdWdodCBoaW0gdXAgdG8gJDkwLDAwMCB3b3J0aCBvZiBwaGFybWFjZXV0aWNhbCBzdG9jay48L3A+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8ZmlndXJlPgoJCQkJCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvYXMtc2Vhcy1hcm91bmQtbWFyLWEtbGFnby1yaXNlLXRydW1wcy1jdXRzLWNvdWxkLWRhbWFnZS1sb2NhbC1jbGltYXRlLXdvcmsvIj4KCQkJCQkJCQkgICAgCQkJCQkJCQkgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2NhY2hlLzIwMTcwMzMxLXNlYS1ncmFudC0xNDB4MTQwLTcweDcwLmpwZyIgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIiAgYWx0PSJBcyBTZWFzIEFyb3VuZCBNYXItYS1MYWdvIFJpc2UsIFRydW1wJiM4MjE3O3MgQ3V0cyBDb3VsZCBEYW1hZ2UgTG9jYWwgQ2xpbWF0ZSBXb3JrIiAvPgoJCQkJCQkJCSAgICAJCQkJCQkJCTwvYT4KCQkJCQkJCTwvZmlndXJlPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CgkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCgkJCQkJCQk8aGVhZGVyPgoJCQkJCQkJCTxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL2FzLXNlYXMtYXJvdW5kLW1hci1hLWxhZ28tcmlzZS10cnVtcHMtY3V0cy1jb3VsZC1kYW1hZ2UtbG9jYWwtY2xpbWF0ZS13b3JrLyIgY2xhc3M9InRpdGxlLWxpbmsiPkFzIFNlYXMgQXJvdW5kIE1hci1hLUxhZ28gUmlzZSwgVHJ1bXAmIzgyMTc7cyBDdXRzIENvdWxkIERhbWFnZSBMb2NhbCBDbGltYXRlIFdvcms8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL2xpc2Ffc29uZy8iPkxpc2EgU29uZzwvYT48YnIgLz4gUHJvUHVibGljYSwgIE1hcmNoIDMxLCA4IGEubS48L3A+CgkJCQkJCQk8L2hlYWRlcj4KCQkJCQkJCTxwPlRoZSBwcmVzaWRlbnQmIzgyMTc7cyBidWRnZXQgY2FsbHMgZm9yIGVuZGluZyBhbiBlbnZpcm9ubWVudGFsIHByb2dyYW0gdGhhdCBoYWQgc3VwcG9ydGVkIGNsaW1hdGUgZWZmb3J0cyBpbiBoaXMgYW5kIHNldmVyYWwgQ2FiaW5ldCBtZW1iZXJzJiM4MjE3OyBiYWNreWFyZHMuPC9wPgoJCQkJCQk8L2Rpdj4JCgkJCQkJPC9zZWN0aW9uPgogICAgICAgICAgICAKCgogICAgCiAgICAgICAgICAgIAkJCQkJPHNlY3Rpb24+CgkJCQkJCTxkaXYgY2xhc3M9InJpdmVyLW1ldGEiPgoJCQkJCQkJPGZpZ3VyZT4KCQkJCQkJCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL291ci1taWxpdGFyeS13YXN0ZS1nYW1lLXN1ZGRlbmx5LXNlZW1zLXByb3BoZXRpYy8iPgoJCQkJCQkJCSAgICAJCQkJCQkJCSAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vY2FjaGUvMjAxNTEyMTctYWZnaGFuaXN0YW4td2FzdGUtMTQweDE0MF8xLTcweDcwLmpwZyIgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIiAgYWx0PSJPdXIgTWlsaXRhcnkgV2FzdGUgR2FtZSBTdWRkZW5seSBTZWVtcyBQcm9waGV0aWMiIC8+CgkJCQkJCQkJICAgIAkJCQkJCQkJPC9hPgoJCQkJCQkJPC9maWd1cmU+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJib3gtZmVhdHVyZS10ZXh0Ij4KCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQk8YXNpZGUgY2xhc3M9InRvcGljIj4KCQkJCQkJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL2ctaS1kb3VnaC8iPkcuSS4gRG91Z2g8L2E+CQkJCQkJCQk8L2FzaWRlPgoJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCgkJCQkJCQk8aGVhZGVyPgoJCQkJCQkJCTxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL291ci1taWxpdGFyeS13YXN0ZS1nYW1lLXN1ZGRlbmx5LXNlZW1zLXByb3BoZXRpYy8iIGNsYXNzPSJ0aXRsZS1saW5rIj5PdXIgTWlsaXRhcnkgV2FzdGUgR2FtZSBTdWRkZW5seSBTZWVtcyBQcm9waGV0aWM8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL21lZ2FuX21jY2xvc2tleS8iPk1lZ2FuIFJvc2UgPC9hPjxiciAvPiBQcm9QdWJsaWNhLCAgTWFyY2ggMzAsIDE6MjUgcC5tLjwvcD4KCQkJCQkJCTwvaGVhZGVyPgoJCQkJCQkJPHA+V2l0aCBUcnVtcCBwdXNoaW5nIHRvIGdpdmUgdGhlIFUuUy4gbWlsaXRhcnkgYW5vdGhlciAkNTIgYmlsbGlvbiwgYSBnYW1lIHdlIGJ1aWx0IHR3byB5ZWFycyBhZ28gdG8gcHV0IHRoZSBiaWxsaW9ucyB3YXN0ZWQgaW4gQWZnaGFuaXN0YW4gaW4gcGVyc3BlY3RpdmUgc2VlbXMgcGFydGljdWxhcmx5IHJlbGV2YW50LjwvcD4KCQkJCQkJPC9kaXY+CQoJCQkJCTwvc2VjdGlvbj4KICAgICAgICAgICAgCgoKICAgIAogICAgICAgICAgICAJCQkJCTxzZWN0aW9uPgoJCQkJCQk8ZGl2IGNsYXNzPSJyaXZlci1tZXRhIj4KCQkJCQkJCTxmaWd1cmU+CgkJCQkJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS90cnVtcHMtYnV5LWFtZXJpY2FuLXBsZWRnZS1tYXktYmUtYXQtcmlzay13aXRoLWhpcy1ib3JkZXItd2FsbC8iPgoJCQkJCQkJCSAgICAJCQkJCQkJCSAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vY2FjaGUvMjAxNzAzMzAtdHJ1bXAtMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iVHJ1bXAmIzgyMTc7cyAmIzgyMTY7QnV5IEFtZXJpY2FuJiM4MjE3OyBQbGVkZ2UgTWF5IEJlIEF0IFJpc2sgV2l0aCBIaXMgQm9yZGVyIFdhbGwiIC8+CgkJCQkJCQkJICAgIAkJCQkJCQkJPC9hPgoJCQkJCQkJPC9maWd1cmU+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGNsYXNzPSJib3gtZmVhdHVyZS10ZXh0Ij4KCQkJCQkJCQkJCQkJCQkKCQkJCQkJCQkJCQkJCQkKCQkJCQkJCTxoZWFkZXI+CgkJCQkJCQkJPGgxPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvdHJ1bXBzLWJ1eS1hbWVyaWNhbi1wbGVkZ2UtbWF5LWJlLWF0LXJpc2std2l0aC1oaXMtYm9yZGVyLXdhbGwvIiBjbGFzcz0idGl0bGUtbGluayI+VHJ1bXAmIzgyMTc7cyAmIzgyMTY7QnV5IEFtZXJpY2FuJiM4MjE3OyBQbGVkZ2UgTWF5IEJlIEF0IFJpc2sgV2l0aCBIaXMgQm9yZGVyIFdhbGw8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL3RfY2hyaXN0aWFuX21pbGxlci8iPlQuIENocmlzdGlhbiBNaWxsZXI8L2E+PGJyIC8+IFByb1B1YmxpY2EsICBNYXJjaCAzMCwgMTE6MTcgYS5tLjwvcD4KCQkJCQkJCTwvaGVhZGVyPgoJCQkJCQkJPHA+Q3VycmVudCB0cmFkZSBhZ3JlZW1lbnRzIG1lYW4gZm9yZWlnbiBjb21wYW5pZXMsIGluY2x1ZGluZyBzb21lIGJpZyBmaXJtcyBpbiBNZXhpY28sIG1pZ2h0IHdlbGwgZ2V0IGluIG9uIHRoZSBidWlsZGluZyBvZiB0aGUgcHJlc2lkZW50JiM4MjE3O3Mgd2FsbC48L3A+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8ZmlndXJlPgoJCQkJCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvaG93LXRoZS10cnVtcC1hZG1pbmlzdHJhdGlvbi1yZXNwb25kcy10by1kZW1vY3JhdHMtZGVtYW5kcy1mb3ItaW5mb3JtYXRpb24vIj4KCQkJCQkJCQkgICAgCQkJCQkJCQkgICAgICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2NhY2hlLzIwMTcwMzMwLWNvbmdyZXNzaW9uYWwtZGVtb2NyYXRzLWxldHRlcnMtMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iSG93IHRoZSBUcnVtcCBBZG1pbmlzdHJhdGlvbiBSZXNwb25kcyB0byBEZW1vY3JhdHMmIzgyMTc7IERlbWFuZHMgZm9yIEluZm9ybWF0aW9uOiBJdCBEb2VzbiYjODIxNzt0LiIgLz4KCQkJCQkJCQkgICAgCQkJCQkJCQk8L2E+CgkJCQkJCQk8L2ZpZ3VyZT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImJveC1mZWF0dXJlLXRleHQiPgoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJPGhlYWRlcj4KCQkJCQkJCQk8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9ob3ctdGhlLXRydW1wLWFkbWluaXN0cmF0aW9uLXJlc3BvbmRzLXRvLWRlbW9jcmF0cy1kZW1hbmRzLWZvci1pbmZvcm1hdGlvbi8iIGNsYXNzPSJ0aXRsZS1saW5rIj5Ib3cgdGhlIFRydW1wIEFkbWluaXN0cmF0aW9uIFJlc3BvbmRzIHRvIERlbW9jcmF0cyYjODIxNzsgRGVtYW5kcyBmb3IgSW5mb3JtYXRpb246IEl0IERvZXNuJiM4MjE3O3QuPC9hPjwvaDE+CgkJCQkJCQkJPHAgY2xhc3M9ImJ5bGluZSI+CgoKCgoKYnkgPGEgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2F1dGhvci9qdXN0aW5fZWxsaW90dC8iPkp1c3RpbiBFbGxpb3R0PC9hPjxiciAvPiBQcm9QdWJsaWNhLCAgTWFyY2ggMzAsIDExOjEyIGEubS48L3A+CgkJCQkJCQk8L2hlYWRlcj4KCQkJCQkJCTxwPkNvbmdyZXNzaW9uYWwgRGVtb2NyYXRzJiM4MjE3OyBsZXR0ZXJzIHRvIHRoZSBUcnVtcCBhZG1pbmlzdHJhdGlvbiBhcmUgZ29pbmcgdW5hbnN3ZXJlZC48L3A+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hdHByb3B1YmxpY2EvaXRlbS9wcm9wdWJsaWNhLWlsbGlub2lzLXBhcnRuZXJzLXdpdGgtYmV5b25kLWNhcmluZy1wbGF5LW9uLWNoaWNhZ28tdGVtcC13b3JrZXIvIj5NYXJjaCAyOSwgOToyNCBhLm0uPC9hPjwvcD4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImJveC1mZWF0dXJlLXRleHQiPgoJCQkJCQkJPGhlYWRlcj4KCQkJCQkJCQk8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXRwcm9wdWJsaWNhL2l0ZW0vcHJvcHVibGljYS1pbGxpbm9pcy1wYXJ0bmVycy13aXRoLWJleW9uZC1jYXJpbmctcGxheS1vbi1jaGljYWdvLXRlbXAtd29ya2VyLyIgY2xhc3M9InRpdGxlLWxpbmsiPlByb1B1YmxpY2EgSWxsaW5vaXMgUGFydG5lcnMgd2l0aCAmIzgyMjA7QmV5b25kIENhcmluZyYjODIyMTsgUGxheSBvbiBDaGljYWdvIFRlbXAgV29ya2VyczwvYT48L2gxPgoJCQkJCQkJPC9oZWFkZXI+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8ZmlndXJlPgoJCQkJCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvbmV3LXlvcmstcGFyZW50cy1pbi1jdXN0b2R5LWZpZ2h0cy1sYWNrLXJpZ2h0LXRvLXNlZS1leHBlcnQtcmVwb3J0cy8iPgoJCQkJCQkJCSAgICAJCQkJCQkJCSAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vY2FjaGUvMjAxNzAzMjktZm9yZW5zaWMtZXZhbHVhdGlvbnMtMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iTmV3IFlvcmsgUGFyZW50cyBpbiBDdXN0b2R5IEZpZ2h0cyBMYWNrIFJpZ2h0IHRvIFNlZSBFeHBlcnQgUmVwb3J0cyIgLz4KCQkJCQkJCQkgICAgCQkJCQkJCQk8L2E+CgkJCQkJCQk8L2ZpZ3VyZT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImJveC1mZWF0dXJlLXRleHQiPgoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJPGhlYWRlcj4KCQkJCQkJCQk8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9uZXcteW9yay1wYXJlbnRzLWluLWN1c3RvZHktZmlnaHRzLWxhY2stcmlnaHQtdG8tc2VlLWV4cGVydC1yZXBvcnRzLyIgY2xhc3M9InRpdGxlLWxpbmsiPk5ldyBZb3JrIFBhcmVudHMgaW4gQ3VzdG9keSBGaWdodHMgTGFjayBSaWdodCB0byBTZWUgRXhwZXJ0IFJlcG9ydHM8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL2pvYXF1aW5fc2FwaWVuLyI+Sm9hcXVpbiBTYXBpZW48L2E+PGJyIC8+IFByb1B1YmxpY2EsICBNYXJjaCAyOSwgNzo1OSBhLm0uPC9wPgoJCQkJCQkJPC9oZWFkZXI+CgkJCQkJCQk8cD5PbmUgc3RhdGUgbGVnaXNsYXRvciBpcyBhZ2FpbiBwdXNoaW5nIGEgYmlsbCB0aGF0IHdvdWxkIGdyYW50IHBhcmVudHMgdGhlIGxlZ2FsIHJpZ2h0IHRvIHNlZSB0aGUgZXhwZXJ0IGV2YWx1YXRpb25zIGp1ZGdlcyB1c2UgdG8gZGVjaWRlIGN1c3RvZHkgYW5kIG90aGVyIGNhc2VzLjwvcD4KCQkJCQkJPC9kaXY+CQoJCQkJCTwvc2VjdGlvbj4KICAgICAgICAgICAgCgoKICAgIAogICAgICAgICAgICAJCQkJCTxzZWN0aW9uPgoJCQkJCQk8ZGl2IGNsYXNzPSJyaXZlci1tZXRhIj4KCQkJCQkJCTxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvc3R1ZGVudHMtcHJvcHVibGljYS13YW50cy10by1wYXktZm9yLXlvdS10by1hdHRlbmQtbmFoai1uYWJqLWFhamEtb3ItbmFqYS8iPk1hcmNoIDI5LCA3OjU5IGEubS48L2E+PC9wPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CgkJCQkJCQk8aGVhZGVyPgoJCQkJCQkJCTxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL3N0dWRlbnRzLXByb3B1YmxpY2Etd2FudHMtdG8tcGF5LWZvci15b3UtdG8tYXR0ZW5kLW5haGotbmFiai1hYWphLW9yLW5hamEvIiBjbGFzcz0idGl0bGUtbGluayI+U3R1ZGVudHMhIFByb1B1YmxpY2EgV2FudHMgdG8gUGF5IEZvciBZb3UgdG8gQXR0ZW5kIE5BSEosIE5BQkosIEFBSkEgb3IgTkFKQTwvYT48L2gxPgoJCQkJCQkJPC9oZWFkZXI+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8ZmlndXJlPgoJCQkJCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvY2FtZWxvdC11bmRlci1zaWVnZS8iPgoJCQkJCQkJCSAgICAJCQkJCQkJCSAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vY2FjaGUvMjAxNzAzMjgtY2FtZWxvdC1hbHQtc2Nob29scy11cGRhdGUtMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iQ2FtZWxvdCBVbmRlciBTaWVnZSIgLz4KCQkJCQkJCQkgICAgCQkJCQkJCQk8L2E+CgkJCQkJCQk8L2ZpZ3VyZT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgY2xhc3M9ImJveC1mZWF0dXJlLXRleHQiPgoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJCQkJCQkJCQoJCQkJCQkJPGhlYWRlcj4KCQkJCQkJCQk8aDE+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9jYW1lbG90LXVuZGVyLXNpZWdlLyIgY2xhc3M9InRpdGxlLWxpbmsiPkNhbWVsb3QgVW5kZXIgU2llZ2U8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj5ieSBTYXJhaCBDYXJyLCBabyYjMjM1OyBLaXJzY2gsIEZyYW5jZXNjYSBCZXJhcmRpIGFuZCBTdGVwaGVuIFNtaWxleSwgVGhlIFRlYWNoZXIgUHJvamVjdCwgIE1hcmNoIDI5LCA2IGEubS48L3A+CgkJCQkJCQk8L2hlYWRlcj4KCQkJCQkJCTxwPkNhbWVsb3QgRWR1Y2F0aW9uLCBhIGZvci1wcm9maXQgbWFuYWdlciBvZiBhbHRlcm5hdGl2ZSBzY2hvb2xzLCBpcyBmYWNpbmcgY2hhbGxlbmdlcyBuYXRpb253aWRlIGFmdGVyIG91ciByZXBvcnQgb24gYWxsZWdlZCBwaHlzaWNhbCBhYnVzZSBvZiBzdHVkZW50cyBieSBzdGFmZmVycy48L3A+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCiAgICAKICAgICAgICAgICAgCQkJCQk8c2VjdGlvbj4KCQkJCQkJPGRpdiBjbGFzcz0icml2ZXItbWV0YSI+CgkJCQkJCQk8ZmlndXJlPgoJCQkJCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvZGVtb2NyYXRpYy1zZW5hdG9ycy1hc2stamVmZi1zZXNzaW9ucy10by1leHBsYWluLXByZWV0LWJoYXJhcmEtZmlyaW5nLyI+CgkJCQkJCQkJICAgIAkJCQkJCQkJICAgICAgICA8aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS9jYWNoZS8yMDE3MDMyOC1qZWZmLXNlc3Npb25zLXByZWV0LWJoYXJhcmEtMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iRGVtb2NyYXRpYyBTZW5hdG9ycyBBc2sgSmVmZiBTZXNzaW9ucyB0byBFeHBsYWluIFByZWV0IEJoYXJhcmEgRmlyaW5nIiAvPgoJCQkJCQkJCSAgICAJCQkJCQkJCTwvYT4KCQkJCQkJCTwvZmlndXJlPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CgkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCgkJCQkJCQk8aGVhZGVyPgoJCQkJCQkJCTxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL2RlbW9jcmF0aWMtc2VuYXRvcnMtYXNrLWplZmYtc2Vzc2lvbnMtdG8tZXhwbGFpbi1wcmVldC1iaGFyYXJhLWZpcmluZy8iIGNsYXNzPSJ0aXRsZS1saW5rIj5EZW1vY3JhdGljIFNlbmF0b3JzIEFzayBKZWZmIFNlc3Npb25zIHRvIEV4cGxhaW4gUHJlZXQgQmhhcmFyYSBGaXJpbmc8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL3JvYmVydF9mYXR1cmVjaGkvIj5Sb2JlcnQgRmF0dXJlY2hpPC9hPjxiciAvPiBQcm9QdWJsaWNhLCAgTWFyY2ggMjgsIDI6NTkgcC5tLjwvcD4KCQkJCQkJCTwvaGVhZGVyPgoJCQkJCQkJPHA+VGhlIGxhd21ha2VycyBjaXRlZCBhIFByb1B1YmxpY2EgcmVwb3J0IHRoYXQgVS5TLiBBdHRvcm5leSBCaGFyYXJhIHdhcyBpbnZlc3RpZ2F0aW5nIEhIUyBTZWNyZXRhcnkgVG9tIFByaWNlIHdoZW4gdGhlIFRydW1wIGFkbWluaXN0cmF0aW9uIHJldmVyc2VkIGNvdXJzZSBhbmQgcmVtb3ZlZCBoaW0uPC9wPgoJCQkJCQk8L2Rpdj4JCgkJCQkJPC9zZWN0aW9uPgogICAgICAgICAgICAKCgogICAgCiAgICAgICAgICAgIAkJCQkJPHNlY3Rpb24+CgkJCQkJCTxkaXYgY2xhc3M9InJpdmVyLW1ldGEiPgoJCQkJCQkJPGZpZ3VyZT4KCQkJCQkJCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL2JlbGx3ZXRoZXItYmVoYXZpb3JhbC1oZWFsdGgtaXMtY29udHJvdmVyc2lhbC1ncm91cC1ob21lLW9wZXJhdG9yLWFkdm9zZXJ2LyI+CgkJCQkJCQkJICAgIAkJCQkJCQkJICAgICAgICA8aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS9jYWNoZS8yMDE1MTIwOS1hZHZvc2Vydi0xNDB4MTQwXzMtNzB4NzAuanBnIiB3aWR0aD0iNzAiIGhlaWdodD0iNzAiICBhbHQ9IkJlbGx3ZXRoZXIgQmVoYXZpb3JhbCBIZWFsdGggSXMgQ29udHJvdmVyc2lhbCBHcm91cCBIb21lIE9wZXJhdG9yIEFkdm9TZXJ2ICYjODIxMjsgV2l0aCBhIE5ldyBOYW1lIiAvPgoJCQkJCQkJCSAgICAJCQkJCQkJCTwvYT4KCQkJCQkJCTwvZmlndXJlPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CgkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJPGFzaWRlIGNsYXNzPSJ0b3BpYyI+CgkJCQkJCQkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy9yZXN0cmFpbnRzLyI+UmVzdHJhaW50czwvYT4JCQkJCQkJCTwvYXNpZGU+CgkJCQkJCQkKCQkJCQkJCQkJCQkJCQkKCQkJCQkJCTxoZWFkZXI+CgkJCQkJCQkJPGgxPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvYmVsbHdldGhlci1iZWhhdmlvcmFsLWhlYWx0aC1pcy1jb250cm92ZXJzaWFsLWdyb3VwLWhvbWUtb3BlcmF0b3ItYWR2b3NlcnYvIiBjbGFzcz0idGl0bGUtbGluayI+QmVsbHdldGhlciBCZWhhdmlvcmFsIEhlYWx0aCBJcyBDb250cm92ZXJzaWFsIEdyb3VwIEhvbWUgT3BlcmF0b3IgQWR2b1NlcnYgJiM4MjEyOyBXaXRoIGEgTmV3IE5hbWU8L2E+PC9oMT4KCQkJCQkJCQk8cCBjbGFzcz0iYnlsaW5lIj4KCgoKCgpieSA8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL3NpdGUvYXV0aG9yL2hlYXRoZXJfdm9nZWxsLyI+SGVhdGhlciBWb2dlbGw8L2E+PGJyIC8+IFByb1B1YmxpY2EsICBNYXJjaCAyOCwgOCBhLm0uPC9wPgoJCQkJCQkJPC9oZWFkZXI+CgkJCQkJCQk8cD5BZnRlciB0d28gZGVhdGhzIG9mIHRlZW5hZ2UgcmVzaWRlbnRzIGluIGxlc3MgdGhhbiBmb3VyIHllYXJzLCBBZHZvU2VydiBoYXMgcXVpZXRseSB0YWtlbiBhIG5ldyBuYW1lIHRoYXQgbWFrZXMgaXQgaGFyZGVyIHRvIGZvbGxvdyB0aGUgdHJhaWwgb2YgbWVkaWEgY292ZXJhZ2UsIGluY2x1ZGluZyBvdXJzLjwvcD4KCQkJCQkJPC9kaXY+CQoJCQkJCTwvc2VjdGlvbj4KICAgICAgICAgICAgCgoKICAgIAogICAgICAgICAgICAJCQkJCTxzZWN0aW9uPgoJCQkJCQk8ZGl2IGNsYXNzPSJyaXZlci1tZXRhIj4KCQkJCQkJCTxmaWd1cmU+CgkJCQkJCQkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9jb3JuaW5ncy1nbGFzcy1icmltbWluZy13aXRoLXRheHBheWVyLXN1YnNpZGllcy8iPgoJCQkJCQkJCSAgICAJCQkJCQkJCSAgICAgICAgPGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9tZWRpdW0vY2FjaGUvMjAxNzAzMjctc3Vic2lkaWVzLWNvcm5pbmctMTQweDE0MC03MHg3MC5qcGciIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCIgIGFsdD0iQ29ybmluZyYjODIxNztzIEdsYXNzIEJyaW1taW5nIFdpdGggVGF4cGF5ZXIgU3Vic2lkaWVzIiAvPgoJCQkJCQkJCSAgICAJCQkJCQkJCTwvYT4KCQkJCQkJCTwvZmlndXJlPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBjbGFzcz0iYm94LWZlYXR1cmUtdGV4dCI+CgkJCQkJCQkJCQkJCQkJCgkJCQkJCQkJCQkJCQkJCgkJCQkJCQk8aGVhZGVyPgoJCQkJCQkJCTxoMT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL2Nvcm5pbmdzLWdsYXNzLWJyaW1taW5nLXdpdGgtdGF4cGF5ZXItc3Vic2lkaWVzLyIgY2xhc3M9InRpdGxlLWxpbmsiPkNvcm5pbmcmIzgyMTc7cyBHbGFzcyBCcmltbWluZyBXaXRoIFRheHBheWVyIFN1YnNpZGllczwvYT48L2gxPgoJCQkJCQkJCTxwIGNsYXNzPSJieWxpbmUiPmJ5IENoYXJsb3R0ZSBLZWl0aCBhbmQgTWFzYWtvIE1lbGlzc2EgSGlyc2NoLCBJbnZlc3RpZ2F0aXZlIFBvc3QsIE1hcmNoIDI3LCA4IGEubS48L3A+CgkJCQkJCQk8L2hlYWRlcj4KCQkJCQkJCTxwPkhvcGluZyB0byByZXZpdmUgdXBzdGF0ZSBOZXcgWW9yayYjODIxNztzIHNsdWdnaXNoIGVjb25vbXksIEdvdmVybm9yIEFuZHJldyBDdW9tbyBoYXMgcG91cmVkIGJpbGxpb25zIGludG8gc3Vic2lkaWVzIGZvciBDb3JuaW5nIGFuZCBvdGhlciBidXNpbmVzc2VzLiBCdXQgdGhlIHJlc3VsdGluZyBqb2IgZ3Jvd3RoIGhhcyBiZWVuIG1vZGVzdC48L3A+CgkJCQkJCTwvZGl2PgkKCQkJCQk8L3NlY3Rpb24+CiAgICAgICAgICAgIAoKCQoKCQkJCQk8Zm9ybSAgaWQ9ImFyY2hpdmVfZm9ybSIgY2xhc3M9InNlYXJjaF9mb3JtIGFydGljbGUtbGlzdC1zZWFyY2giPgkKCQkJCQk8YSBocmVmPSJodHRwOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FyY2hpdmUvaW5kZXgiPsKrIFN0b3J5IEFyY2hpdmU8L2E+IHwgb3IgQnJvd3NlIAoJCQkJCTxzZWxlY3QgaWQ9ImFyY2hpdmVfc2VsZWN0Ij4KCQkJCQkJCQk8b3B0aW9uPmJ5IG1vbnRoPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNy8wNCI+QXByaWwgMjAxNzwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTcvMDMiPk1hcmNoIDIwMTc8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE3LzAyIj5GZWJydWFyeSAyMDE3PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNy8wMSI+SmFudWFyeSAyMDE3PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNi8xMiI+RGVjZW1iZXIgMjAxNjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTYvMTEiPk5vdmVtYmVyIDIwMTY8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE2LzEwIj5PY3RvYmVyIDIwMTY8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE2LzA5Ij5TZXB0ZW1iZXIgMjAxNjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTYvMDgiPkF1Z3VzdCAyMDE2PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNi8wNyI+SnVseSAyMDE2PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNi8wNiI+SnVuZSAyMDE2PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNi8wNSI+TWF5IDIwMTY8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE2LzA0Ij5BcHJpbCAyMDE2PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNi8wMyI+TWFyY2ggMjAxNjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTYvMDIiPkZlYnJ1YXJ5IDIwMTY8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE2LzAxIj5KYW51YXJ5IDIwMTY8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE1LzEyIj5EZWNlbWJlciAyMDE1PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNS8xMSI+Tm92ZW1iZXIgMjAxNTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTUvMTAiPk9jdG9iZXIgMjAxNTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTUvMDkiPlNlcHRlbWJlciAyMDE1PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNS8wOCI+QXVndXN0IDIwMTU8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE1LzA3Ij5KdWx5IDIwMTU8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE1LzA2Ij5KdW5lIDIwMTU8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE1LzA1Ij5NYXkgMjAxNTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTUvMDQiPkFwcmlsIDIwMTU8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE1LzAzIj5NYXJjaCAyMDE1PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNS8wMiI+RmVicnVhcnkgMjAxNTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTUvMDEiPkphbnVhcnkgMjAxNTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTQvMTIiPkRlY2VtYmVyIDIwMTQ8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE0LzExIj5Ob3ZlbWJlciAyMDE0PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNC8xMCI+T2N0b2JlciAyMDE0PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNC8wOSI+U2VwdGVtYmVyIDIwMTQ8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE0LzA4Ij5BdWd1c3QgMjAxNDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTQvMDciPkp1bHkgMjAxNDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTQvMDYiPkp1bmUgMjAxNDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTQvMDUiPk1heSAyMDE0PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNC8wNCI+QXByaWwgMjAxNDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTQvMDMiPk1hcmNoIDIwMTQ8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDE0LzAyIj5GZWJydWFyeSAyMDE0PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxNC8wMSI+SmFudWFyeSAyMDE0PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMy8xMiI+RGVjZW1iZXIgMjAxMzwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTMvMTEiPk5vdmVtYmVyIDIwMTM8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEzLzEwIj5PY3RvYmVyIDIwMTM8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEzLzA5Ij5TZXB0ZW1iZXIgMjAxMzwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTMvMDgiPkF1Z3VzdCAyMDEzPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMy8wNyI+SnVseSAyMDEzPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMy8wNiI+SnVuZSAyMDEzPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMy8wNSI+TWF5IDIwMTM8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEzLzA0Ij5BcHJpbCAyMDEzPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMy8wMyI+TWFyY2ggMjAxMzwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTMvMDIiPkZlYnJ1YXJ5IDIwMTM8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEzLzAxIj5KYW51YXJ5IDIwMTM8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEyLzEyIj5EZWNlbWJlciAyMDEyPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMi8xMSI+Tm92ZW1iZXIgMjAxMjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTIvMTAiPk9jdG9iZXIgMjAxMjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTIvMDkiPlNlcHRlbWJlciAyMDEyPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMi8wOCI+QXVndXN0IDIwMTI8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEyLzA3Ij5KdWx5IDIwMTI8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEyLzA2Ij5KdW5lIDIwMTI8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEyLzA1Ij5NYXkgMjAxMjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTIvMDQiPkFwcmlsIDIwMTI8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEyLzAzIj5NYXJjaCAyMDEyPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMi8wMiI+RmVicnVhcnkgMjAxMjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTIvMDEiPkphbnVhcnkgMjAxMjwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTEvMTIiPkRlY2VtYmVyIDIwMTE8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDExLzExIj5Ob3ZlbWJlciAyMDExPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMS8xMCI+T2N0b2JlciAyMDExPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMS8wOSI+U2VwdGVtYmVyIDIwMTE8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDExLzA4Ij5BdWd1c3QgMjAxMTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTEvMDciPkp1bHkgMjAxMTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTEvMDYiPkp1bmUgMjAxMTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTEvMDUiPk1heSAyMDExPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMS8wNCI+QXByaWwgMjAxMTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTEvMDMiPk1hcmNoIDIwMTE8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDExLzAyIj5GZWJydWFyeSAyMDExPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMS8wMSI+SmFudWFyeSAyMDExPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMC8xMiI+RGVjZW1iZXIgMjAxMDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTAvMTEiPk5vdmVtYmVyIDIwMTA8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEwLzEwIj5PY3RvYmVyIDIwMTA8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEwLzA5Ij5TZXB0ZW1iZXIgMjAxMDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTAvMDgiPkF1Z3VzdCAyMDEwPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMC8wNyI+SnVseSAyMDEwPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMC8wNiI+SnVuZSAyMDEwPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMC8wNSI+TWF5IDIwMTA8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEwLzA0Ij5BcHJpbCAyMDEwPC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAxMC8wMyI+TWFyY2ggMjAxMDwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMTAvMDIiPkZlYnJ1YXJ5IDIwMTA8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDEwLzAxIj5KYW51YXJ5IDIwMTA8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA5LzEyIj5EZWNlbWJlciAyMDA5PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAwOS8xMSI+Tm92ZW1iZXIgMjAwOTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDkvMTAiPk9jdG9iZXIgMjAwOTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDkvMDkiPlNlcHRlbWJlciAyMDA5PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAwOS8wOCI+QXVndXN0IDIwMDk8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA5LzA3Ij5KdWx5IDIwMDk8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA5LzA2Ij5KdW5lIDIwMDk8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA5LzA1Ij5NYXkgMjAwOTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDkvMDQiPkFwcmlsIDIwMDk8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA5LzAzIj5NYXJjaCAyMDA5PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAwOS8wMiI+RmVicnVhcnkgMjAwOTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDkvMDEiPkphbnVhcnkgMjAwOTwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDgvMTIiPkRlY2VtYmVyIDIwMDg8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA4LzExIj5Ob3ZlbWJlciAyMDA4PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAwOC8xMCI+T2N0b2JlciAyMDA4PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAwOC8wOSI+U2VwdGVtYmVyIDIwMDg8L29wdGlvbj4KCQkJCQkJCQkKCQkJCQkJCQk8b3B0aW9uIHZhbHVlPSIyMDA4LzA4Ij5BdWd1c3QgMjAwODwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDgvMDciPkp1bHkgMjAwODwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDgvMDYiPkp1bmUgMjAwODwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkJCTxvcHRpb24gdmFsdWU9IjIwMDgvMDUiPk1heSAyMDA4PC9vcHRpb24+CgkJCQkJCQkJCgkJCQkJCQkJPG9wdGlvbiB2YWx1ZT0iMjAwOC8wNCI+QXByaWwgMjAwODwvb3B0aW9uPgoJCQkJCQkJCQoJCQkJCQkgIDwvc2VsZWN0PgoJCQkJCSA8aW5wdXQgdHlwZT0ic3VibWl0IiBpZD0iYXJjaGl2ZV9mb3JtX2dvIiB2YWx1ZT0iZ28iPgoJCQkJCTwvZm9ybT4KCQkJCQkKCQkJCTwvc2VjdGlvbj48IS0tIHJpdmVyIC0tPgogICAgICAgICAgICA8L3NlY3Rpb24+PCEtLSBlbmQgI2FyY2hpdmUgLS0+ICAgICAKICAgICAgICA8L2Rpdj48IS0tIGVuZCAjbWVhdCAtLT4gICAgCiAgICAgICAgICAgICAgICA8c2NyaXB0IHNyYz0iLy9jb25uZWN0LmZhY2Vib29rLm5ldC9lbl9VUy9hbGwuanMiPjwvc2NyaXB0Pgo8ZGl2IGlkPSJmYi1yb290Ij48L2Rpdj4KPHNjcmlwdD4KICBGQi5pbml0KHsKICAgIGFwcElkICAgICAgOiAnMjI5ODYyNjU3MTMwNTU3JywgLy8gQXBwIElECiAgICBzdGF0dXMgICAgIDogdHJ1ZSwgLy8gY2hlY2sgbG9naW4gc3RhdHVzCiAgICBjb29raWUgICAgIDogdHJ1ZSwgLy8gZW5hYmxlIGNvb2tpZXMgdG8gYWxsb3cgdGhlIHNlcnZlciB0byBhY2Nlc3MgdGhlIHNlc3Npb24KICAgIHhmYm1sICAgICAgOiB0cnVlICAvLyBwYXJzZSBYRkJNTAogIH0pOwo8L3NjcmlwdD4KCjxkaXYgaWQ9ImphbWIiIGNsYXNzPSJ3RnVsbCI+CgogIAogICAgPGRpdiBpZD0iYWNjb3JkaW9uLTIwMTEiPgogICAgCiAgICA8ZGl2IGNsYXNzPSJhY2NvcmRpb24taGVhZGVyIj4KICAgICAgICA8aDI+TWFqb3IgUHJvamVjdHM8L2gyPgogICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL2ludmVzdGlnYXRpb25zIj5zZWUgYWxsPC9hPjwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9ImFjLXRhYiBjdXJyZW50Ij4KICAgICAgICAKICAgICAgICA8aDMgY2xhc3M9InRpdGxlLWxpbmsiPk1hY2hpbmUgQmlhczwvaDM+CiAgICAgICAgPGg0IGNsYXNzPSJ0aXRsZS1saW5rIj48L2g0PgogICAgICAgIAoJICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUiPjwhLS0gLS0+PC9kaXY+Cgk8L2Rpdj4KCgk8ZGl2IGNsYXNzPSJwYW5lIiBzdHlsZT0iZGlzcGxheTpibG9jayI+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0icGFuZS13cmFwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL21hY2hpbmUtYmlhcy8iPjxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfYWNjb3JkaW9uLzIwMTYwNTIzLW1hY2hpbmUtYmlhcy0yODB4MTgwLmpwZyIgYWx0PSJNYWNoaW5lIEJpYXMiIHdpZHRoPSIyODAiIGhlaWdodD0iMTgwIiAvPjwvYT48L3A+ICAgICAgICAgICAgICAgIDxwPldlJiM4MjE3O3JlIGludmVzdGlnYXRpbmcgYWxnb3JpdGhtaWMgaW5qdXN0aWNlIGFuZCB0aGUgZm9ybXVsYXMgdGhhdCBpbmNyZWFzaW5nbHkgaW5mbHVlbmNlIG91ciBsaXZlcy4KPC9wPgo8IS0tICAtLT4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+MjQgU3RvcmllcyBpbiB0aGUgU2VyaWVzLiBMYXRlc3Q6PC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvYmlhcy1pbi1jcmltaW5hbC1yaXNrLXNjb3Jlcy1pcy1tYXRoZW1hdGljYWxseS1pbmV2aXRhYmxlLXJlc2VhcmNoZXJzLXNheS8iPkJpYXMgaW4gQ3JpbWluYWwgUmlzayBTY29yZXMgSXMgTWF0aGVtYXRpY2FsbHkgSW5ldml0YWJsZSwgUmVzZWFyY2hlcnMgU2F5PC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idXRpbGl0eS10ZXh0Ij48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvbWFjaGluZS1iaWFzLyI+U2VlIGVudGlyZSBzZXJpZXM8L2E+PC9wPgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9ImFjLXRhYiI+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJ0aXRsZS1saW5rIj5UaGUgUmVudCBSYWNrZXQ8L2gzPgogICAgICAgIDxoNCBjbGFzcz0idGl0bGUtbGluayI+SG93IExhbmRsb3JkcyBTaWRlc3RlcCBUZW5hbnQgUHJvdGVjdGlvbnMgaW4gTmV3IFlvcmsgQ2l0eTwvaDQ+CiAgICAgICAgCgkgICAgPGRpdiBjbGFzcz0iYWNjb3JkaW9uLXRvZ2dsZSI+PCEtLSAtLT48L2Rpdj4KCTwvZGl2PgoKCTxkaXYgY2xhc3M9InBhbmUiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9InBhbmUtd3JhcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy90aGUtcmVudC1yYWNrZXQvIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX2FjY29yZGlvbi8yMDE1MTIwMy1yZW50LXNlcmllcy0yODB4MTgwLmpwZyIgYWx0PSJUaGUgUmVudCBSYWNrZXQiIHdpZHRoPSIyODAiIGhlaWdodD0iMTgwIiAvPjwvYT48L3A+ICAgICAgICAgICAgICAgIDxwPlByb1B1YmxpY2EgaXMgZXhwbG9yaW5nIE5ldyBZb3JrIENpdHkmIzgyMTc7cyBicm9rZW4gcmVudCBzdGFiaWxpemF0aW9uIHN5c3RlbSwgdGhlIHRheCBicmVha3MgdGhhdCB1bmRlcnBpbiBpdCwgdGhlIHJlZ3VsYXRvcnMgd2hvIGxvb2sgdGhlIG90aGVyIHdheSBhbmQgdGhlIHRlbmFudHMgd2hvIHN1ZmZlciBhcyBhIHJlc3VsdC4KPC9wPgo8IS0tICAtLT4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+MzEgU3RvcmllcyBpbiB0aGUgU2VyaWVzLiBMYXRlc3Q6PC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvZ292LWN1b21vcy1hZmZvcmRhYmxlLWhvdXNpbmctcHJvcG9zYWwtd291bGQtbWFrZS1yZW50cy1sZXNzLWFmZm9yZGFibGUvIj5Hb3YuIEN1b21vJ3MgTmV3IEFmZm9yZGFibGUgSG91c2luZyBQcm9wb3NhbCBXb3VsZCBNYWtlIFNvbWUgUmVudHMgTGVzcyBBZmZvcmRhYmxlPC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idXRpbGl0eS10ZXh0Ij48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvdGhlLXJlbnQtcmFja2V0LyI+U2VlIGVudGlyZSBzZXJpZXM8L2E+PC9wPgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9ImFjLXRhYiI+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJ0aXRsZS1saW5rIj5JbW1pZ3JhdGlvbjwvaDM+CiAgICAgICAgPGg0IGNsYXNzPSJ0aXRsZS1saW5rIj48L2g0PgogICAgICAgIAoJICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUiPjwhLS0gLS0+PC9kaXY+Cgk8L2Rpdj4KCgk8ZGl2IGNsYXNzPSJwYW5lIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lLXdyYXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvaW1taWdyYXRpb24vIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX2FjY29yZGlvbi8yMDE3MDIwMi1pbW1pZ3JhdGlvbi0yODB4MTgwLmpwZyIgYWx0PSJJbW1pZ3JhdGlvbiIgd2lkdGg9IjI4MCIgaGVpZ2h0PSIxODAiIC8+PC9hPjwvcD4gICAgICAgICAgICAgICAgCjwhLS0gIC0tPgogICAgICAgICAgICAgICAgPHA+PHN0cm9uZz4xNyBTdG9yaWVzIGluIHRoZSBTZXJpZXMuIExhdGVzdDo8L3N0cm9uZz48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9jYW4tY3VzdG9tcy1ib3JkZXItcHJvdGVjdGlvbi1zZWFyY2gtcGhvbmUtbGVnYWwtcmlnaHRzLyI+Q2FuIEN1c3RvbXMgYW5kIEJvcmRlciBPZmZpY2lhbHMgU2VhcmNoIFlvdXIgUGhvbmU/IFRoZXNlIEFyZSBZb3VyIFJpZ2h0czwvYT48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InV0aWxpdHktdGV4dCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL2ltbWlncmF0aW9uLyI+U2VlIGVudGlyZSBzZXJpZXM8L2E+PC9wPgogICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPC9kaXY+CiAgICAKICAgIDxkaXYgY2xhc3M9ImFjLXRhYiI+CiAgICAgICAgCiAgICAgICAgPGgzIGNsYXNzPSJ0aXRsZS1saW5rIj5UaGUgQnJlYWtkb3duPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPkhvdyBwb2xpdGljcyBhbmQgZ292ZXJubWVudCByZWFsbHkgd29yaywgYW5kIHdoeSB0aGV5IGRvbiYjODIxNzt0LiA8L2g0PgogICAgICAgIAoJICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUiPjwhLS0gLS0+PC9kaXY+Cgk8L2Rpdj4KCgk8ZGl2IGNsYXNzPSJwYW5lIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lLXdyYXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvdGhlLWJyZWFrZG93bi8iPjxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfYWNjb3JkaW9uLzIwMTUxMjE3LXRoZS1icmVha2Rvd24tMjgweDE4MC5qcGciIGFsdD0iVGhlIEJyZWFrZG93biIgd2lkdGg9IjI4MCIgaGVpZ2h0PSIxODAiIC8+PC9hPjwvcD4gICAgICAgICAgICAgICAgPHA+T3VyIHNlcmllcyBzZWVrcyB0byBzaG93IGhvdyBwb2xpdGljcyBhbmQgZ292ZXJubWVudCByZWFsbHkgd29yaywgYW5kIHdoeSB0aGV5IGRvbiYjODIxNzt0Lgo8L3A+CjwhLS0gIC0tPgogICAgICAgICAgICAgICAgPHA+PHN0cm9uZz41NCBTdG9yaWVzIGluIHRoZSBTZXJpZXMuIExhdGVzdDo8L3N0cm9uZz48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS9jYW4tdGhlLWRlbW9jcmF0cy1iZS1hcy1zdHViYm9ybi1hcy1taXRjaC1tY2Nvbm5lbGwvIj5DYW4gdGhlIERlbW9jcmF0cyBCZSBhcyBTdHViYm9ybiBhcyBNaXRjaCBNY0Nvbm5lbGw/PC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idXRpbGl0eS10ZXh0Ij48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvdGhlLWJyZWFrZG93bi8iPlNlZSBlbnRpcmUgc2VyaWVzPC9hPjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJhYy10YWIiPgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0idGl0bGUtbGluayI+RWxlY3Rpb25sYW5kPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPk1vbml0b3JpbmcgYWNjZXNzIHRvIHRoZSB2b3RlIGluIHJlYWwgdGltZS48L2g0PgogICAgICAgIAoJICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUiPjwhLS0gLS0+PC9kaXY+Cgk8L2Rpdj4KCgk8ZGl2IGNsYXNzPSJwYW5lIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lLXdyYXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvZWxlY3Rpb25sYW5kLyI+PGltZyBzcmM9Ii9pbWFnZXMvbmdlbi9neXBzeV9pbWFnZV9hY2NvcmRpb24vMjAxNjExNy1FbGVjdGlvbmxhbmQtU2VyaWVzLTI4MHgxODAuanBnIiBhbHQ9IkVsZWN0aW9ubGFuZCIgd2lkdGg9IjI4MCIgaGVpZ2h0PSIxODAiIC8+PC9hPjwvcD4gICAgICAgICAgICAgICAgPHA+UHJvUHVibGljYSBpcyBjb3ZlcmluZyBhY2Nlc3MgdG8gdGhlIGJhbGxvdCBhbmQgcHJvYmxlbXMgdGhhdCBwcmV2ZW50IHBlb3BsZSBmcm9tIGV4ZXJjaXNpbmcgdGhlaXIgcmlnaHQgdG8gdm90ZSBkdXJpbmcgdGhlIDIwMTYgZWxlY3Rpb24uCjwvcD4KPCEtLSAgLS0+CiAgICAgICAgICAgICAgICA8cD48c3Ryb25nPjggU3RvcmllcyBpbiB0aGUgU2VyaWVzLiBMYXRlc3Q6PC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvcGF0LW1jY3JvcnktcmUtZWxlY3Rpb24tYmlkLWF0dGVtcHRzLWhvbGQtcG93ZXItY2xhaW1pbmctdm90ZXItZnJhdWQvIj5OLkMuIEdvdmVybm9yIExvc2VzIFJlLUVsZWN0aW9uIEJpZCwgQXR0ZW1wdHMgdG8gSG9sZCBQb3dlciBieSBDbGFpbWluZyBWb3RlciBGcmF1ZDwvYT48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InV0aWxpdHktdGV4dCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL2VsZWN0aW9ubGFuZC8iPlNlZSBlbnRpcmUgc2VyaWVzPC9hPjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJhYy10YWIiPgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0idGl0bGUtbGluayI+UmVsaXZpbmcgQWdlbnQgT3JhbmdlPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPjwvaDQ+CiAgICAgICAgCgkgICAgPGRpdiBjbGFzcz0iYWNjb3JkaW9uLXRvZ2dsZSI+PCEtLSAtLT48L2Rpdj4KCTwvZGl2PgoKCTxkaXYgY2xhc3M9InBhbmUiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9InBhbmUtd3JhcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy9yZWxpdmluZy1hZ2VudC1vcmFuZ2UvIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX2FjY29yZGlvbi8yMDE1MDgyOC1hZ2VudC1vcmFuZ2Utc2VyaWVzLTI4MHgxODAtMi5qcGciIGFsdD0iUmVsaXZpbmcgQWdlbnQgT3JhbmdlIiB3aWR0aD0iMjgwIiBoZWlnaHQ9IjE4MCIgLz48L2E+PC9wPiAgICAgICAgICAgICAgICA8cD5Qcm9QdWJsaWNhIGFuZCBUaGUgVmlyZ2luaWFuLVBpbG90IGFyZSBleHBsb3JpbmcgdGhlIGVmZmVjdHMgb2YgdGhlIGNoZW1pY2FsIG1peHR1cmUgQWdlbnQgT3JhbmdlIG9uIFZpZXRuYW0gdmV0ZXJhbnMgYW5kIHRoZWlyIGZhbWlsaWVzLCBhcyB3ZWxsIGFzIHRoZWlyIGZpZ2h0IGZvciBiZW5lZml0cy4KPC9wPgo8IS0tICAtLT4KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmc+MjggU3RvcmllcyBpbiB0aGUgU2VyaWVzLiBMYXRlc3Q6PC9zdHJvbmc+PC9wPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2FydGljbGUvcHJvcHVibGljYS1maWxlcy1sYXdzdWl0LXNlZWtpbmctdmEtY29ycmVzcG9uZGVuY2UtcmVsYXRlZC10by1hZ2VudC1vcmFuZ2UvIj5Qcm9QdWJsaWNhIEZpbGVzIExhd3N1aXQgU2Vla2luZyBWQSBDb3JyZXNwb25kZW5jZSBSZWxhdGVkIHRvIEFnZW50IE9yYW5nZTwvYT48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InV0aWxpdHktdGV4dCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL3JlbGl2aW5nLWFnZW50LW9yYW5nZS8iPlNlZSBlbnRpcmUgc2VyaWVzPC9hPjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJhYy10YWIiPgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0idGl0bGUtbGluayI+SGVsbCBhbmQgSGlnaCBXYXRlcjwvaDM+CiAgICAgICAgPGg0IGNsYXNzPSJ0aXRsZS1saW5rIj48L2g0PgogICAgICAgIAoJICAgIDxkaXYgY2xhc3M9ImFjY29yZGlvbi10b2dnbGUiPjwhLS0gLS0+PC9kaXY+Cgk8L2Rpdj4KCgk8ZGl2IGNsYXNzPSJwYW5lIj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lLXdyYXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvaGVsbC1hbmQtaGlnaC13YXRlci8iPjxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfYWNjb3JkaW9uLzIwMTYwMzAzLWhvdXN0b24tc2VyaWVzLTI4MHgxODAuanBnIiBhbHQ9IkhlbGwgYW5kIEhpZ2ggV2F0ZXIiIHdpZHRoPSIyODAiIGhlaWdodD0iMTgwIiAvPjwvYT48L3A+ICAgICAgICAgICAgICAgIDxwPkhvdXN0b24gaXMgdGhlIGZvdXJ0aC1sYXJnZXN0IGNpdHkgaW4gdGhlIGNvdW50cnkuIEl0JiM4MjE3O3MgaG9tZSB0byB0aGUgbmF0aW9uJiM4MjE3O3MgbGFyZ2VzdCByZWZpbmluZyBhbmQgcGV0cm9jaGVtaWNhbCBjb21wbGV4LCB3aGVyZSBiaWxsaW9ucyBvZiBnYWxsb25zIG9mIG9pbCBhbmQgZGFuZ2Vyb3VzIGNoZW1pY2FscyBhcmUgc3RvcmVkLiBBbmQgaXQmIzgyMTc7cyBhIHNpdHRpbmcgZHVjayBmb3IgdGhlIG5leHQgYmlnIGh1cnJpY2FuZS4gV2h5IGlzbiYjODIxNzt0IFRleGFzIHJlYWR5Pwo8L3A+CjwhLS0gIC0tPgogICAgICAgICAgICAgICAgPHA+PHN0cm9uZz45IFN0b3JpZXMgaW4gdGhlIFNlcmllcy4gTGF0ZXN0Ojwvc3Ryb25nPjwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hcnRpY2xlL29iYW1hLXNpZ25zLWJpbGwtdGhhdC1tYXktYm9vc3QtdGV4YXMtaHVycmljYW5lLXByb3RlY3Rpb24tc3R1ZHkvIj5PYmFtYSBTaWducyBCaWxsIFRoYXQgTWF5IEJvb3N0IFRleGFzIEh1cnJpY2FuZSBQcm90ZWN0aW9uIFN0dWR5PC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idXRpbGl0eS10ZXh0Ij48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zZXJpZXMvaGVsbC1hbmQtaGlnaC13YXRlci8iPlNlZSBlbnRpcmUgc2VyaWVzPC9hPjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJhYy10YWIiPgogICAgICAgIAogICAgICAgIDxoMyBjbGFzcz0idGl0bGUtbGluayI+QnVzdGVkPC9oMz4KICAgICAgICA8aDQgY2xhc3M9InRpdGxlLWxpbmsiPjwvaDQ+CiAgICAgICAgCgkgICAgPGRpdiBjbGFzcz0iYWNjb3JkaW9uLXRvZ2dsZSI+PCEtLSAtLT48L2Rpdj4KCTwvZGl2PgoKCTxkaXYgY2xhc3M9InBhbmUiPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9InBhbmUtd3JhcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL3Nlcmllcy9idXN0ZWQvIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX2FjY29yZGlvbi8yMDE2MDcwNy1jaGVtaWNhbC1maWVsZC10ZXN0cy0yODB4MTgwLmpwZyIgYWx0PSJCdXN0ZWQiIHdpZHRoPSIyODAiIGhlaWdodD0iMTgwIiAvPjwvYT48L3A+ICAgICAgICAgICAgICAgIDxwPlRlbnMgb2YgdGhvdXNhbmRzIG9mIHBlb3BsZSBldmVyeSB5ZWFyIGFyZSBzZW50IHRvIGphaWwgYmFzZWQgb24gdGhlIHJlc3VsdHMgb2YgYSAkMiByb2Fkc2lkZSBkcnVnIHRlc3QuIFdpZGVzcHJlYWQgZXZpZGVuY2Ugc2hvd3MgdGhhdCB0aGVzZSB0ZXN0cyByb3V0aW5lbHkgcHJvZHVjZSBmYWxzZSBwb3NpdGl2ZXMuIFdoeSBhcmUgcG9saWNlIGRlcGFydG1lbnRzIGFuZCBwcm9zZWN1dG9ycyBzdGlsbCB1c2luZyB0aGVtPwo8L3A+CjwhLS0gIC0tPgogICAgICAgICAgICAgICAgPHA+PHN0cm9uZz4xMiBTdG9yaWVzIGluIHRoZSBTZXJpZXMuIExhdGVzdDo8L3N0cm9uZz48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYXJ0aWNsZS90ZXhhcy1wYW5lbC13cm9uZ2Z1bC1jb252aWN0aW9ucy1jYWxscy1lbmQtdXNlLXVudmVyaWZpZWQtZHJ1Zy1maWVsZC10ZXN0cy8iPlRleGFzIFBhbmVsIG9uIFdyb25nZnVsIENvbnZpY3Rpb25zIENhbGxzIGZvciBFbmRpbmcgVXNlIG9mIFVudmVyaWZpZWQgRHJ1ZyBGaWVsZCBUZXN0czwvYT48L3A+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InV0aWxpdHktdGV4dCI+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvc2VyaWVzL2J1c3RlZC8iPlNlZSBlbnRpcmUgc2VyaWVzPC9hPjwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvZGl2PgogICAgCgkKPC9kaXY+Cjxhc2lkZSBjbGFzcz0iYWQiPgo8IS0tIFJpZ2h0X1JhaWxfUHVzaGRvd24gLS0+CjxkaXYgaWQ9J2dvb2dsZS1SaWdodF9SYWlsX1B1c2hkb3duJz4KICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CiAgICBnb29nbGV0YWcuZGlzcGxheSgnZ29vZ2xlLVJpZ2h0X1JhaWxfUHVzaGRvd24nKTsKICA8L3NjcmlwdD4KPC9kaXY+CjwvYXNpZGU+Cjxhc2lkZSBjbGFzcz0iYWQiPgoJPCEtLSBSdF9TZGJyX05vbi1Nb2JpbGUtT25seTMwMHgyNTAgLS0+Cgk8ZGl2IGlkPSdnb29nbGUtUnRfU2Ricl9Ob24tTW9iaWxlLU9ubHkzMDB4MjUwJz4KCQk8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CgkJCWdvb2dsZXRhZy5kaXNwbGF5KCdnb29nbGUtUnRfU2Ricl9Ob24tTW9iaWxlLU9ubHkzMDB4MjUwJyk7CgkJPC9zY3JpcHQ+Cgk8L2Rpdj4KPC9hc2lkZT4KCgogIAo8c3R5bGU+CmFzaWRlLm5lcmRfYmxvZyB7IHdpZHRoOjI5MHB4OyBiYWNrZ3JvdW5kOiB3aGl0ZTsgYm9yZGVyOjFweCBzb2xpZCAjY2VjZWNlOyBwYWRkaW5nOjEwcHggNXB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbjogMTBweCAwcHg7fQphc2lkZS5uZXJkX2Jsb2cgaDEgeyBwYWRkaW5nOjEwcHggMHB4IDBweDsgZm9udC1zaXplOjI0cHg7IG1hcmdpbi1ib3R0b206IDFweDsgY29sb3I6YmxhY2s7fQphc2lkZS5uZXJkX2Jsb2cgcCBhIHsgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXNpemU6MTFweDsgY29sb3I6YmxhY2s7fQphc2lkZS5uZXJkX2Jsb2cgcCBhOmhvdmVyeyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IGNvbG9yOmJsYWNrO30KPC9zdHlsZT4KCjxhc2lkZSBjbGFzcz0ibmVyZF9ibG9nIj4KPGEgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9uZXJkcyI+CjxzcGFuPjxpbWcgc3JjPSJodHRwczovL3N0YXRpYy5wcm9wdWJsaWNhLm9yZy9pbWFnZXMvbmVyZGJsb2dfcHJvbW9pbWcucG5nIiB3aWR0aD0iMjgwcHgiLz48L3NwYW4+PC9hPgo8aDE+PGEgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9uZXJkcyI+VGhlIFByb1B1YmxpY2EgTmVyZCBCbG9nPC9hPjwvaDE+CjxwIHN0eWxlPSJtYXJnaW4tYm90dG9tOjBweCI+PGEgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9uZXJkcyI+U2VjcmV0cyBmb3IgRGF0YSBKb3VybmFsaXN0cyBhbmQgTmV3c3Jvb20gRGV2ZWxvcGVyczwvYT48L3A+CjwvYXNpZGU+Cjxhc2lkZSBjbGFzcz0ibmVyZF9ibG9nIj4KPGEgaHJlZj0iaHR0cHM6Ly9wcm9qZWN0cy5wcm9wdWJsaWNhLm9yZy9kYXRhLXN0b3JlLyI+CiAgPHNwYW4+PGltZyBzcmM9Imh0dHBzOi8vc3RhdGljLnByb3B1YmxpY2Eub3JnL3Byb2plY3RzL2RhdGFwdWJsaWNhL2RhdGEtc3RvcmUtcHJvbW8uanBnIiB3aWR0aD0iMjgwcHgiPjwvc3Bhbj4KPC9hPgo8aDE+PGEgaHJlZj0iaHR0cHM6Ly9wcm9qZWN0cy5wcm9wdWJsaWNhLm9yZy9kYXRhLXN0b3JlLyI+UHJvUHVibGljYSBEYXRhIFN0b3JlPC9hPjwvaDE+CjxwIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAwcHg7Ij48YSBocmVmPSJodHRwczovL3Byb2plY3RzLnByb3B1YmxpY2Eub3JnL2RhdGEtc3RvcmUvIj5Eb3dubG9hZCBvciBQdXJjaGFzZSB0aGUgRGF0YSBCZWhpbmQgT3VyIEpvdXJuYWxpc208L2E+PC9wPgo8L2FzaWRlPgoKICAgIDxhc2lkZSBjbGFzcz0ibW9kdWxlLW1pbmkiPgogICAgICA8ZmlndXJlPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9ZG5abHNqZ0U4SEUmZmVhdHVyZT1jNC1vdmVydmlldyZsaXN0PVVVdENMNThfRGFWZFZSbWV2M3lISzdwZyI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2ltYWdlcy95b3V0dWJlX3ByZXNjcmliZXJfY2hlY2t1cF8xMDB4NTUuanBnIj48L2E+PC9maWd1cmU+CiAgICAgIDxoMT48YSBocmVmPSJodHRwOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvcHJvcHVibGljYSI+PGltZyBzcmM9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2ltYWdlcy9jb21tb24veW91dHViZS0xNi5wbmciPiBZb3VUdWJlIENoYW5uZWw8L2E+PC9oMT4KICAgICAgPHA+PGEgaHJlZj0iaHR0cDovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRuWmxzamdFOEhFJmZlYXR1cmU9YzQtb3ZlcnZpZXcmbGlzdD1VVXRDTDU4X0RhVmRWUm1ldjN5SEs3cGciPk1lZGljYXJlIERydWdzIGFuZCBZb3U6IEV4cGxvcmluZyBQcm9QdWJsaWNhJ3MgUHJlc2NyaWJlciBDaGVja3VwPC9hPjwvcD4KICAgIDwvYXNpZGU+CgogICAgPGFzaWRlIGNsYXNzPSJtb2R1bGUtbWluaSI+CiAgICAgIDxmaWd1cmU+PGEgaHJlZj0iL3BvZGNhc3QiPjxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2NhY2hlL3BwLWxvZ28tMTQweDE0MF80LTcweDcwLmpwZyIgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIiAgYWx0PSJXZSBXYW50IFlvdXIgVGhvdWdodHMgb24gT3VyIFBvZGNhc3QiIC8+PC9hPjwvZmlndXJlPgogICAgICA8aDE+PGEgaHJlZj0iL3BvZGNhc3QiPlBvZGNhc3Q8L2E+PC9oMT4KICAgICAgPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvcG9kY2FzdC9pdGVtL3dlLXdhbnQteW91ci10aG91Z2h0cy1vbi1vdXItcG9kY2FzdC8iPldlIFdhbnQgWW91ciBUaG91Z2h0cyBvbiBPdXIgUG9kY2FzdDwvYT48L3A+CiAgICA8L2FzaWRlPgoKICAgIDxhc2lkZSBjbGFzcz0ibW9kdWxlLW1pbmkiPgoKICAgICAgPGZpZ3VyZT48YSBocmVmPSIvZWJvb2tzIj48aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2tpbmRsZV9jb3ZlcnMvY2FjaGUvYnJlYWtkb3duLWNvdmVyLTE0MHgxODYtNzB4OTMuanBnIiB3aWR0aD0iNzAiIGhlaWdodD0iOTMiICBhbHQ9IlRoZSBCcmVha2Rvd246IEhvdyBQb2xpdGljcyBhbmQgR292ZXJubWVudCBSZWFsbHkgV29yaywgYW5kIFdoeSBUaGV5IERvbiYjODIxNzt0IiAvPjwvYT48L2ZpZ3VyZT4KICAgICAgPGgxPjxhIGhyZWY9Ii9lYm9va3MiPkxhdGVzdCBFLUJvb2s8L2E+PC9oMT4KICAgICAgPHA+PGEgaHJlZj0iL2Vib29rcyI+VGhlIEJyZWFrZG93bjogSG93IFBvbGl0aWNzIGFuZCBHb3Zlcm5tZW50IFJlYWxseSBXb3JrLCBhbmQgV2h5IFRoZXkgRG9uJiM4MjE3O3Q8L2E+PC9wPgo8cCBjbGFzcz0ibW9yZSI+PGEgaHJlZj0iL2Vib29rcyI+U2VlIGFsbCAmcmFxdW87PC9hPjwvcD4KCiAgICA8L2FzaWRlPgoKPHN0eWxlPgouY2xlYXJmaXg6YmVmb3JlLCAuY2xlYXJmaXg6YWZ0ZXIge2NvbnRlbnQ6ICIgIjsgZGlzcGxheTogdGFibGU7fQouY2xlYXJmaXg6YWZ0ZXIge2NsZWFyOiBib3RoO30KLmNsZWFyZml4IHsqem9vbTogMTt9CiNqYW1iIC5tb2R1bGUuZ2ktZ3JvdXAtcHJvbW97IGJvcmRlcjogc29saWQgMXB4ICNkMmQyZDI7IHBhZGRpbmc6IDE1cHg7IGJhY2tncm91bmQtY29sb3I6ICNmYmZiZmI7IG1hcmdpbjogMTBweCAwOyB3aWR0aDogYXV0bzt9Ci5naS1ncm91cC1wcm9tbyBoZWFkZXJ7Zm9udDogMTBweC8xICJIZWx2ZXRpY2EgTmV1ZSIsIkFyaWFsIixzYW5zLXNlcmlmOyBjb2xvcjojYzNjM2MzOyB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyBsZXR0ZXItc3BhY2luZzogLjVweDsgbWFyZ2luLWJvdHRvbTogM3B4O30KLmdpLWdyb3VwLXByb21vIGgxe2ZvbnQtc2l6ZToyNXB4OyBtYXJnaW4tdG9wOiAwcHg7IG1hcmdpbi1ib3R0b206IDE1cHg7fQouZ2ktZ3JvdXAtcHJvbW8gc2VjdGlvbntjbGVhcjogYm90aDt9Ci5naS1ncm91cC1wcm9tbyBzZWN0aW9uLmxhc3R7Ym9yZGVyLWJvdHRvbTogc29saWQgMXB4ICNkMmQyZDI7fQouZ2ktZ3JvdXAtcHJvbW8gc2VjdGlvbiBpbWd7ZmxvYXQ6IGxlZnQ7IGNsZWFyOiBsZWZ0OyBtYXJnaW4tYm90dG9tOiAxNXB4O30KLmdpLWdyb3VwLXByb21vIHNlY3Rpb24gZGl2e3dpZHRoOiAxODBweDsgZmxvYXQ6IHJpZ2h0O30KI21lYXQgLmdpLWdyb3VwLXByb21vIHNlY3Rpb257ZmxvYXQ6IG5vbmU7fQouZ2ktZ3JvdXAtcHJvbW8gIHNlY3Rpb24gYXtjb2xvcjogIzAwMDt9Ci5naS1ncm91cC1wcm9tbyBkaXYgcHtmb250LXdlaWdodDogYm9sZDsgZm9udC1zaXplOiAxM3B4OyBsaW5lLWhlaWdodDogMS4yO30KLmdpLWdyb3VwLXByb21vIGZvb3RlcntwYWRkaW5nLXRvcDogMTVweDsgY2xlYXI6IGJvdGg7fQouZ2ktZ3JvdXAtcHJvbW8gZm9vdGVyIHB7Zm9udDogaXRhbGljIDE1cHgvMS4zICJHZW9yZ2lhIiwgc2VyaWY7fQouZ2ktZ3JvdXAtcHJvbW8gYS5hY3Rpb257ZGlzcGxheTogYmxvY2s7IGhlaWdodDogMzNweDsgbGluZS1oZWlnaHQ6IDMzcHg7IG1hcmdpbjogMTVweCBhdXRvOyB3aWR0aDogMTY1cHg7IGZsb2F0OiBub25lOyBjb2xvcjogI2ZmZjt9Cjwvc3R5bGU+CiA8YXNpZGUgY2xhc3M9Im1vZHVsZSBnaS1ncm91cC1wcm9tbyI+CjxoZWFkZXI+R2V0IEludm9sdmVkPC9oZWFkZXI+CjxoMT5IZWxwIFVzIEludmVzdGlnYXRlPC9oMT4KCjxzZWN0aW9uID4KICA8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9nZXRpbnZvbHZlZC9pdGVtL2hlbHAtdXMtZmFjdC1jaGVjay1tZW1iZXJzLW9mLWNvbmdyZXNzLW9uLXRoZS1hZmZvcmRhYmxlLWNhcmUtYWN0LyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS8yMDE3MDMwOS1hY2EtY2FsbG91dC0xNDB4MTQwXzEuanBnIiAgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIj4KICAgIDxkaXY+CiAgICAgIDxoZWFkZXI+PC9oZWFkZXI+CiAgICAgIDxwPklzIFlvdXIgTWVtYmVyIG9mIENvbmdyZXNzIFRlbGxpbmcgSXQgU3RyYWlnaHQgT24gVGhlIEFDQT8gSGVscCBVcyBGYWN0LUNoZWNrIFRoZW0uPC9wPgogICAgPC9kaXY+CiAgPC9hPgo8L3NlY3Rpb24+Cgo8c2VjdGlvbiA+CiAgPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvZ2V0aW52b2x2ZWQvaXRlbS9oZWxwLXByb3B1YmxpY2EtaW52ZXN0aWdhdGUtd2FzdGVkLWhlYWx0aC1jYXJlLWRvbGxhcnMvIj4KICAgIDxpbWcgc3JjPSIvaW1hZ2VzL25nZW4vZ3lwc3lfaW1hZ2VfbWVkaXVtL2hlYWx0aGNhcmUtd2FzdGUtMTQwLmpwZyIgIHdpZHRoPSI3MCIgaGVpZ2h0PSI3MCI+CiAgICA8ZGl2PgogICAgICA8aGVhZGVyPjwvaGVhZGVyPgogICAgICA8cD5BYm91dCAkNzY1IEJpbGxpb24gSXMgV2FzdGVkIEVhY2ggWWVhciBvbiBIZWFsdGggQ2FyZS4gQ2FuIFlvdSBIZWxwIFVzIEZpbmQgSXQ/PC9wPgogICAgPC9kaXY+CiAgPC9hPgo8L3NlY3Rpb24+Cgo8c2VjdGlvbiBjbGFzcz0ibGFzdCBjbGVhcmZpeCI+CiAgPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvZ2V0aW52b2x2ZWQvaXRlbS9oZWxwLXByb3B1YmxpY2EtYW5kLXVzYS10b2RheS1pbnZlc3RpZ2F0ZS1hbHRlcm5hdGl2ZS1zY2hvb2xzLyI+CiAgICA8aW1nIHNyYz0iL2ltYWdlcy9uZ2VuL2d5cHN5X2ltYWdlX21lZGl1bS8yMDE3MDIyMS1hbHQtc2Nob29scy1jYWxsb3V0LTE0MHgxNDAuanBnIiAgd2lkdGg9IjcwIiBoZWlnaHQ9IjcwIj4KICAgIDxkaXY+CiAgICAgIDxoZWFkZXI+PC9oZWFkZXI+CiAgICAgIDxwPkhlbHAgUHJvUHVibGljYSBhbmQgVVNBIFRvZGF5IEludmVzdGlnYXRlIEFsdGVybmF0aXZlIFNjaG9vbHM8L3A+CiAgICA8L2Rpdj4KICA8L2E+Cjwvc2VjdGlvbj4KCjxmb290ZXI+CiAgPHA+Sm9pbiBQcm9QdWJsaWNhJ3MgUmVwb3J0aW5nIE5ldHdvcmsgZm9yIHVwZGF0ZXMgb24gZnV0dXJlIGFzc2lnbm1lbnRzIGFuZCBpbnZlc3RpZ2F0aW9ucy48L3A+CiAgPGEgY2xhc3M9ImFjdGlvbiIgaHJlZj0iaHR0cDovL3d3dy5wcm9wdWJsaWNhLm9yZy9nZXRpbnZvbHZlZC9hYm91dD91dG1fY2FtcGFpZ249Z2lfc2lnbnVwX2hvbWVwYWdlJnV0bV9zb3VyY2U9Z2V0aW52b2x2ZWQmdXRtX21lZGl1bT1nZXRpbnZvbHZlZCNzaWdudXAiPlNpZ24gVXA8L2E+CjwvZm9vdGVyPgogPC9hc2lkZT4KCiAgICAgICAgICA8IS0tZ29vZ2xlb2ZmOiBzbmlwcGV0LS0+Cjxhc2lkZSBjbGFzcz0ibW9kdWxlLXRhYmJlZC0yMDExIj4gCiAgICA8aDEgY2xhc3M9Im1vZHVsZS10aXRsZSI+T3VyIEhvdHRlc3QgU3RvcmllczwvaDE+CiAgICA8dWwgY2xhc3M9InRhYnMiPgogICAgICAgIDxsaT48YSBocmVmPSIjbW9zdC1yZWFkIiBjbGFzcz0iYWN0aXZlIj5Nb3N0IFJlYWQ8L2E+PC9saT4KICAgICAgICAKICAgIDwvdWw+CiAgICA8ZGl2IGNsYXNzPSJwYW5lcyI+CiAgICAgICAgPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQgYWN0aXZlIiBpZD0ibW9zdC1yZWFkIj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJmaXJzdCI+Jm5ic3A7PC9saT4KICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPgogICAgICAgICAgICAgICAgPGxpPiZuYnNwOzwvbGk+CiAgICAgICAgICAgICAgICA8bGk+Jm5ic3A7PC9saT4KICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPgogICAgICAgICAgICAgICAgPGxpPiZuYnNwOzwvbGk+CiAgICAgICAgICAgICAgICA8bGk+Jm5ic3A7PC9saT4KICAgICAgICAgICAgICAgIDxsaT4mbmJzcDs8L2xpPgogICAgICAgICAgICAgICAgPGxpPiZuYnNwOzwvbGk+CiAgICAgICAgICAgICAgICA8bGk+Jm5ic3A7PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgIDwvZGl2Pgo8L2FzaWRlPgo8IS0tZ29vZ2xlb246IHNuaXBwZXQtLT4gICAgCgoKCiAgPC9kaXY+PCEtLSAvamFtYiAtLT4KCiAgICA8L2Rpdj48IS0tIGVuZCAud3JhcHBlciAtLT4KPC9kaXY+PCEtLSBlbmQgI3BhZ2UgLS0+Cgo8Zm9vdGVyIGNsYXNzPSJzaGVsbCB3RnVsbCI+Cgk8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9zaXRlL2RvbmF0ZTMvIiBpZD0iZm9vdC10YWItZG9uYXRlIj5Eb25hdGU8L2E+CgkJPHNlY3Rpb24gY2xhc3M9ImNvcHlyaWdodCI+CgkJCTxwIGlkPSJmb290ZXItbG9nby1pbWFnZSI+UHJvUHVibGljYTwvcD4KCQkJPHA+CgkJCQkmY29weTsgQ29weXJpZ2h0IDIwMTc8YnI+CgkJCQlQcm8gUHVibGljYSBJbmMuCgkJCTwvcD4KCQk8L3NlY3Rpb24+CgkJPHVsPgoJCQkgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2Fib3V0LyI+QWJvdXQgVXM8L2E+PC9saT4KCQkJIDxsaT48YSBocmVmPSJodHRwczovL3Byb3B1YmxpY2Eub3JnL2Fib3V0L3N0YWZmIj5TdGFmZjwvYT48L2xpPgoJCQkgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHJvcHVibGljYS5vcmcvYWJvdXQvY29udGFjdCI+Q29udGFjdDwvYT48L2xpPgoJCQkgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHJvcHVibGljYS5vcmcvYWJvdXQvam9icyI+Sm9iczwvYT48L2xpPgoJCQkgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHJvcHVibGljYS5vcmcvYWJvdXQvY29ycmVjdGlvbnMiPkNvbXBsYWludHMgYW5kIENvcnJlY3Rpb25zPC9hPjwvbGk+CgkJCSA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9wcm9wdWJsaWNhLm9yZy9hYm91dC9sZWdhbCI+UHJpdmFjeSBQb2xpY3kgYW5kIE90aGVyIFRlcm1zPC9hPjwvbGk+CgkJCSA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvYWJvdXQvZnJlcXVlbnRseS1hc2tlZC1xdWVzdGlvbnMvIj5GQVE8L2E+PC9saT4KCQk8L3VsPgoJCTx1bD4KCQkJIDxsaT5TdWJzY3JpYmU6IDxhIGhyZWY9Imh0dHA6Ly9nby5wcm9wdWJsaWNhLm9yZy9zaWduLXVwIj5FbWFpbDwvYT4gfCA8YSBocmVmPSJodHRwOi8vZmVlZHMucHJvcHVibGljYS5vcmcvcHJvcHVibGljYS9tYWluIj5SU1M8L2E+PC9saT4KCQkJIDxsaT5Gb2xsb3cgdXM6IDxhIGhyZWY9Imh0dHBzOi8vd3d3LnR3aXR0ZXIuY29tL3Byb3B1YmxpY2EiPlR3aXR0ZXI8L2E+IHwgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Byb3B1YmxpY2EiPkZhY2Vib29rPC9hPjwvbGk+CgkJCSA8bGk+PGEgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9Qcm9QdWJsaWNhL3Byb3B1YmxpY2Etc3RhZmYiPlNlZSBzdGFmZiBUd2l0dGVyIGFjY291bnRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvZ2V0aW52b2x2ZWQvYWJvdXQiPkdldCBJbnZvbHZlZCBAIFByb1B1YmxpY2E8L2E+PC9saT4KCQkJIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9tb2JpbGUtYXBwcyI+UHJvUHVibGljYSBmb3IgaU9TIGFuZCBBbmRyb2lkPC9hPjwvbGk+CgkJCSA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvcG9kY2FzdC8iPkxpc3RlbiB0byBvdXIgUG9kY2FzdDwvYT48L2xpPgoJCTwvdWw+CgkJPHNlY3Rpb24gY2xhc3M9InJlcHVibGlzaCI+CgkJCTxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2Fib3V0L3N0ZWFsLW91ci1zdG9yaWVzIiBpZD0iZm9vdC10YWItcmVwdWJsaXNoIj5TdGVhbCBPdXIgU3RvcmllczwvYT4KCQkJPHA+VW5sZXNzIG90aGVyd2lzZSBub3RlZCwgeW91IGNhbiByZXB1Ymxpc2ggb3VyIHN0b3JpZXMgZm9yIGZyZWUgaWYgeW91IDxhIGhyZWY9Imh0dHBzOi8vd3d3LnByb3B1YmxpY2Eub3JnL2Fib3V0L3N0ZWFsLW91ci1zdG9yaWVzIj5mb2xsb3cgdGhlc2UgcnVsZXM8L2E+LjwvcD4JCQoKPCEtLSBjY19hZCAtLT4KPGRpdiBpZD0nZ29vZ2xlLWNjX2FkJyA+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KZ29vZ2xldGFnLmRpc3BsYXkoJ2dvb2dsZS1jY19hZCcpOwo8L3NjcmlwdD4KPC9kaXY+CgoJCQk8YSBocmVmPSJodHRwczovL3Byb2plY3RzLnByb3B1YmxpY2Eub3JnL2RhdGEtc3RvcmUvIiBzdHlsZT0iY29sb3I6ICMzMzM7IGZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhIE5ldWUnLCdBcmlhbCcsc2Fucy1zZXJpZjsgZm9udC1zaXplOiAxNHB4OyBmb250LXdlaWdodDogYm9sZDsgcGFkZGluZzogMjBweCAwIDEwcHggMDsgZGlzcGxheTogYmxvY2s7Ij5Eb3dubG9hZCBPdXIgRGF0YTwvYT4KICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zZWN1cmVkcm9wLnByb3B1YmxpY2Eub3JnLyIgc3R5bGU9ImNvbG9yOiAjMzMzOyBmb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywnQXJpYWwnLHNhbnMtc2VyaWY7IGZvbnQtc2l6ZTogMTRweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IGRpc3BsYXk6IGJsb2NrOyI+U2VuZCBVcyBUaXBzIG9yIERvY3VtZW50cyBTZWN1cmVseTwvYT4KCgoJCTwvc2VjdGlvbj4KCTwvZGl2PjwhLS0gL3dyYXBwZXIgLS0+CjwvZm9vdGVyPgo8Zm9vdGVyIGNsYXNzPSJzaGVsbCB3TmFycm93Ij4KCTxkaXYgY2xhc3M9IndyYXBwZXIiPgoJCTwhLS0gRG9uJ3Qgc2hvdyBkb25hdGUgaW4gZm9vdGVyIC0tPgoJPG5hdj4KCQk8YSBocmVmPSJodHRwczovL3d3dy5wcm9wdWJsaWNhLm9yZy9hYm91dC9zdGVhbC1vdXItc3RvcmllcyI+U3RlYWwgT3VyIFN0b3JpZXMgPHNwYW4gY2xhc3M9Im5vdGUiPmZvbGxvdyB0aGVzZSBydWxlczwvc3Bhbj48L2E+CgkJPGEgaHJlZj0iaHR0cHM6Ly9wcm9qZWN0cy5wcm9wdWJsaWNhLm9yZy9kYXRhLXN0b3JlLyI+RG93bmxvYWQgT3VyIERhdGE8L2E+CgkJPGEgaHJlZj0iaHR0cHM6Ly9wcm9wdWJsaWNhLm9yZy9hYm91dC9sZWdhbCI+UHJpdmFjeSBQb2xpY3k8L2E+CgkJPGEgaHJlZj0iaHR0cHM6Ly93d3cucHJvcHVibGljYS5vcmcvZm9ybXMvbmV3c2xldHRlcl9kYWlseV9lbWFpbCI+U2lnbiB1cCBmb3Igb3VyIGVtYWlsIGxpc3Q8L2E+CgkJPHA+JmNvcHk7IENvcHlyaWdodCAyMDE3IFBybyBQdWJsaWNhIEluYy48L3A+CjwvbmF2PgoJPC9kaXY+PCEtLSAvd3JhcHBlciAtLT4KPC9mb290ZXI+CgoJCgoKPHNjcmlwdCBzcmM9Ii8vd3d3LnByb3B1YmxpY2Eub3JnL3N0YXRpYy9mb250cy9zcy1zb2NpYWwuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iLy93d3cucHJvcHVibGljYS5vcmcvc3RhdGljL2ZvbnRzL3NzLXN0YW5kYXJkLmpzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+
    http_version: 
  recorded_at: Tue, 04 Apr 2017 13:11:49 GMT
- request:
    method: get
    uri: http://feeds.propublica.org/propublica/main
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Feedjira 2.1.2
  response:
    status:
      code: 200
      message: 
    headers:
      server:
      - nginx
      date:
      - Tue, 04 Apr 2017 13:11:51 GMT
      content-type:
      - text/xml; charset=UTF-8
      last-modified:
      - Tue, 04 Apr 2017 13:11:35 GMT
      transfer-encoding:
      - chunked
      connection:
      - close
      vary:
      - Accept-Encoding
      etag:
      - W/"58e39b87-363e6"
      x-backend-server:
      - 172.16.0.54
      x-feed-name:
      - propublica-main
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 04 Apr 2017 13:11:53 GMT
recorded_with: VCR 3.0.3
